// -----------------------------------------------------------------------------------------------------------
// Copyright (C) AVIN SYSTEMS PVT LTD 2021 - All Rights Reserved Reproduction, distribution and utilization
// of this document as well as the communication of its contents to others without explicit authorization is
// prohibited. Offenders will be held liable for the payment of damages.
// -----------------------------------------------------------------------------------------------------------
// File Name   : proxy_vsomeip_symmetrickey.h
//
// Purpose     : Implementation of file proxy_vsomeip_symmetrickey.h
// -----------------------------------------------------------------------------------------------------------
// CODE GENERATED BY        : CM Code Generator
//
// CODE GENERATOR VERSION   : 1.4.0.A-006
//
// GENERATED ON             : 2022-02-07T12:05:52+05:30
// -----------------------------------------------------------------------------------------------------------

#ifndef CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_CRYOBJ_SYMMETRICKEY_PROXY_VSOMEIP_SYMMETRICKEY_H_
#define CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_CRYOBJ_SYMMETRICKEY_PROXY_VSOMEIP_SYMMETRICKEY_H_

#include "service_desc_symmetrickey.h"
#include "ara/crypto/ipccom/cryp/cryobj/symmetrickey/symmetrickey_proxy.h"

namespace ara
{
namespace crypto
{
namespace ipccom
{
namespace cryp
{
namespace cryobj
{
namespace symmetrickey
{
namespace symmetrickey_binding
{
namespace vsomeip
{

/// @brief Class for SymmetricKeyImpl.
class SymmetricKeyImpl : public proxy::SymmetricKeyProxyBase, public ::ara::com::internal::vsomeip::proxy::ProxyImplBase {
 public :
  /// @brief Using for ProxyInterface.
  using ProxyInterface = proxy::SymmetricKeyProxy;
  /// @brief Using for ServiceDescriptor.
  using ServiceDescriptor = descriptors::internal::Service;

  /// @brief Definition for SymmetricKeyImpl.
  explicit SymmetricKeyImpl(ara::com::internal::vsomeip::types::InstanceId instance) :
  ::ara::com::internal::vsomeip::proxy::ProxyImplBase(ServiceDescriptor::service_id, instance, ServiceDescriptor::service_version_major, ServiceDescriptor::service_version_minor),
  /// @brief Definition for GetAllowedUsage(instance).
    GetAllowedUsage(instance),
  /// @brief Definition for GetCryptoPrimitiveId(instance).
    GetCryptoPrimitiveId(instance),
  /// @brief Definition for GetObjectId(instance).
    GetObjectId(instance),
  /// @brief Definition for GetPayloadSize(instance).
    GetPayloadSize(instance),
  /// @brief Definition for HasDependence(instance).
    HasDependence(instance),
  /// @brief Definition for IsExportable(instance).
    IsExportable(instance),
  /// @brief Definition for IsSession(instance).
    IsSession(instance),
  /// @brief Definition for Save(instance).
    Save(instance)
  {}
  /// @brief Definition for SymmetricKeyImpl.
  ~SymmetricKeyImpl() noexcept override {}

  /// @brief Definition for GetGetAllowedUsage.
        ara::crypto::ipccom::cryp::cryobj::symmetrickey::proxy::methods::GetAllowedUsage& GetGetAllowedUsage() noexcept override { return GetAllowedUsage; }
  /// @brief Definition for GetGetCryptoPrimitiveId.
        ara::crypto::ipccom::cryp::cryobj::symmetrickey::proxy::methods::GetCryptoPrimitiveId& GetGetCryptoPrimitiveId() noexcept override { return GetCryptoPrimitiveId; }
  /// @brief Definition for GetGetObjectId.
        ara::crypto::ipccom::cryp::cryobj::symmetrickey::proxy::methods::GetObjectId& GetGetObjectId() noexcept override { return GetObjectId; }
  /// @brief Definition for GetGetPayloadSize.
        ara::crypto::ipccom::cryp::cryobj::symmetrickey::proxy::methods::GetPayloadSize& GetGetPayloadSize() noexcept override { return GetPayloadSize; }
  /// @brief Definition for GetHasDependence.
        ara::crypto::ipccom::cryp::cryobj::symmetrickey::proxy::methods::HasDependence& GetHasDependence() noexcept override { return HasDependence; }
  /// @brief Definition for GetIsExportable.
        ara::crypto::ipccom::cryp::cryobj::symmetrickey::proxy::methods::IsExportable& GetIsExportable() noexcept override { return IsExportable; }
  /// @brief Definition for GetIsSession.
        ara::crypto::ipccom::cryp::cryobj::symmetrickey::proxy::methods::IsSession& GetIsSession() noexcept override { return IsSession; }
  /// @brief Definition for GetSave.
        ara::crypto::ipccom::cryp::cryobj::symmetrickey::proxy::methods::Save& GetSave() noexcept override { return Save; }

 private:
  /// @brief Method for GetAllowedUsage is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetAllowedUsage, ara::crypto::ipccom::cryp::cryobj::symmetrickey::proxy::methods::GetAllowedUsage::signature_type> GetAllowedUsage;
  /// @brief Method for GetCryptoPrimitiveId is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetCryptoPrimitiveId, ara::crypto::ipccom::cryp::cryobj::symmetrickey::proxy::methods::GetCryptoPrimitiveId::signature_type> GetCryptoPrimitiveId;
  /// @brief Method for GetObjectId is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetObjectId, ara::crypto::ipccom::cryp::cryobj::symmetrickey::proxy::methods::GetObjectId::signature_type> GetObjectId;
  /// @brief Method for GetPayloadSize is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetPayloadSize, ara::crypto::ipccom::cryp::cryobj::symmetrickey::proxy::methods::GetPayloadSize::signature_type> GetPayloadSize;
  /// @brief Method for HasDependence is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::HasDependence, ara::crypto::ipccom::cryp::cryobj::symmetrickey::proxy::methods::HasDependence::signature_type> HasDependence;
  /// @brief Method for IsExportable is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::IsExportable, ara::crypto::ipccom::cryp::cryobj::symmetrickey::proxy::methods::IsExportable::signature_type> IsExportable;
  /// @brief Method for IsSession is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::IsSession, ara::crypto::ipccom::cryp::cryobj::symmetrickey::proxy::methods::IsSession::signature_type> IsSession;
  /// @brief Method for Save is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::Save, ara::crypto::ipccom::cryp::cryobj::symmetrickey::proxy::methods::Save::signature_type> Save;
};

} // namespace vsomeip
} // namespace symmetrickey_binding
} // namespace symmetrickey
} // namespace cryobj
} // namespace cryp
} // namespace ipccom
} // namespace crypto
} // namespace ara

#endif // CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_CRYOBJ_SYMMETRICKEY_PROXY_VSOMEIP_SYMMETRICKEY_H_

