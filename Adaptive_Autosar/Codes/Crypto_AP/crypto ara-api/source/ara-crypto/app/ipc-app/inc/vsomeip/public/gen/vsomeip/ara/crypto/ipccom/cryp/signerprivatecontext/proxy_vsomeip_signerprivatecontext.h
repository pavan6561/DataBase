// -----------------------------------------------------------------------------------------------------------
// Copyright (C) AVIN SYSTEMS PVT LTD 2021 - All Rights Reserved Reproduction, distribution and utilization
// of this document as well as the communication of its contents to others without explicit authorization is
// prohibited. Offenders will be held liable for the payment of damages.
// -----------------------------------------------------------------------------------------------------------
// File Name   : proxy_vsomeip_signerprivatecontext.h
//
// Purpose     : Implementation of file proxy_vsomeip_signerprivatecontext.h
// -----------------------------------------------------------------------------------------------------------
// CODE GENERATED BY        : CM Code Generator
//
// CODE GENERATOR VERSION   : 1.4.0.A-006
//
// GENERATED ON             : 2022-02-07T12:05:52+05:30
// -----------------------------------------------------------------------------------------------------------

#ifndef CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_SIGNERPRIVATECONTEXT_PROXY_VSOMEIP_SIGNERPRIVATECONTEXT_H_
#define CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_SIGNERPRIVATECONTEXT_PROXY_VSOMEIP_SIGNERPRIVATECONTEXT_H_

#include "service_desc_signerprivatecontext.h"
#include "ara/crypto/ipccom/cryp/signerprivatecontext/signerprivatecontext_proxy.h"

namespace ara
{
namespace crypto
{
namespace ipccom
{
namespace cryp
{
namespace signerprivatecontext
{
namespace signerprivatecontext_binding
{
namespace vsomeip
{

/// @brief Class for SignerPrivateContextImpl.
class SignerPrivateContextImpl : public proxy::SignerPrivateContextProxyBase, public ::ara::com::internal::vsomeip::proxy::ProxyImplBase {
 public :
  /// @brief Using for ProxyInterface.
  using ProxyInterface = proxy::SignerPrivateContextProxy;
  /// @brief Using for ServiceDescriptor.
  using ServiceDescriptor = descriptors::internal::Service;

  /// @brief Definition for SignerPrivateContextImpl.
  explicit SignerPrivateContextImpl(ara::com::internal::vsomeip::types::InstanceId instance) :
  ::ara::com::internal::vsomeip::proxy::ProxyImplBase(ServiceDescriptor::service_id, instance, ServiceDescriptor::service_version_major, ServiceDescriptor::service_version_minor),
  /// @brief Definition for GetCryptoPrimitiveId(instance).
    GetCryptoPrimitiveId(instance),
  /// @brief Definition for GetSignatureService(instance).
    GetSignatureService(instance),
  /// @brief Definition for IsInitialized(instance).
    IsInitialized(instance),
  /// @brief Definition for Reset(instance).
    Reset(instance),
  /// @brief Definition for SetKey(instance).
    SetKey(instance),
  /// @brief Definition for SignPreHashedHashFunction(instance).
    SignPreHashedHashFunction(instance),
  /// @brief Definition for SignPreHashedReadOnly(instance).
    SignPreHashedReadOnly(instance),
  /// @brief Definition for SignReadOnly(instance).
    SignReadOnly(instance)
  {}
  /// @brief Definition for SignerPrivateContextImpl.
  ~SignerPrivateContextImpl() noexcept override {}

  /// @brief Definition for GetGetCryptoPrimitiveId.
        ara::crypto::ipccom::cryp::signerprivatecontext::proxy::methods::GetCryptoPrimitiveId& GetGetCryptoPrimitiveId() noexcept override { return GetCryptoPrimitiveId; }
  /// @brief Definition for GetGetSignatureService.
        ara::crypto::ipccom::cryp::signerprivatecontext::proxy::methods::GetSignatureService& GetGetSignatureService() noexcept override { return GetSignatureService; }
  /// @brief Definition for GetIsInitialized.
        ara::crypto::ipccom::cryp::signerprivatecontext::proxy::methods::IsInitialized& GetIsInitialized() noexcept override { return IsInitialized; }
  /// @brief Definition for GetReset.
        ara::crypto::ipccom::cryp::signerprivatecontext::proxy::methods::Reset& GetReset() noexcept override { return Reset; }
  /// @brief Definition for GetSetKey.
        ara::crypto::ipccom::cryp::signerprivatecontext::proxy::methods::SetKey& GetSetKey() noexcept override { return SetKey; }
  /// @brief Definition for GetSignPreHashedHashFunction.
        ara::crypto::ipccom::cryp::signerprivatecontext::proxy::methods::SignPreHashedHashFunction& GetSignPreHashedHashFunction() noexcept override { return SignPreHashedHashFunction; }
  /// @brief Definition for GetSignPreHashedReadOnly.
        ara::crypto::ipccom::cryp::signerprivatecontext::proxy::methods::SignPreHashedReadOnly& GetSignPreHashedReadOnly() noexcept override { return SignPreHashedReadOnly; }
  /// @brief Definition for GetSignReadOnly.
        ara::crypto::ipccom::cryp::signerprivatecontext::proxy::methods::SignReadOnly& GetSignReadOnly() noexcept override { return SignReadOnly; }

 private:
  /// @brief Method for GetCryptoPrimitiveId is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetCryptoPrimitiveId, ara::crypto::ipccom::cryp::signerprivatecontext::proxy::methods::GetCryptoPrimitiveId::signature_type> GetCryptoPrimitiveId;
  /// @brief Method for GetSignatureService is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetSignatureService, ara::crypto::ipccom::cryp::signerprivatecontext::proxy::methods::GetSignatureService::signature_type> GetSignatureService;
  /// @brief Method for IsInitialized is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::IsInitialized, ara::crypto::ipccom::cryp::signerprivatecontext::proxy::methods::IsInitialized::signature_type> IsInitialized;
  /// @brief Method for Reset is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::Reset, ara::crypto::ipccom::cryp::signerprivatecontext::proxy::methods::Reset::signature_type> Reset;
  /// @brief Method for SetKey is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::SetKey, ara::crypto::ipccom::cryp::signerprivatecontext::proxy::methods::SetKey::signature_type> SetKey;
  /// @brief Method for SignPreHashedHashFunction is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::SignPreHashedHashFunction, ara::crypto::ipccom::cryp::signerprivatecontext::proxy::methods::SignPreHashedHashFunction::signature_type> SignPreHashedHashFunction;
  /// @brief Method for SignPreHashedReadOnly is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::SignPreHashedReadOnly, ara::crypto::ipccom::cryp::signerprivatecontext::proxy::methods::SignPreHashedReadOnly::signature_type> SignPreHashedReadOnly;
  /// @brief Method for SignReadOnly is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::SignReadOnly, ara::crypto::ipccom::cryp::signerprivatecontext::proxy::methods::SignReadOnly::signature_type> SignReadOnly;
};

} // namespace vsomeip
} // namespace signerprivatecontext_binding
} // namespace signerprivatecontext
} // namespace cryp
} // namespace ipccom
} // namespace crypto
} // namespace ara

#endif // CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_SIGNERPRIVATECONTEXT_PROXY_VSOMEIP_SIGNERPRIVATECONTEXT_H_

