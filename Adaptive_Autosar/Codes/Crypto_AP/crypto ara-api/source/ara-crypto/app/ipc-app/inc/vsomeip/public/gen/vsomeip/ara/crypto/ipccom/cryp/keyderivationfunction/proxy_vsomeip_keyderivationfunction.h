// -----------------------------------------------------------------------------------------------------------
// Copyright (C) AVIN SYSTEMS PVT LTD 2021 - All Rights Reserved Reproduction, distribution and utilization
// of this document as well as the communication of its contents to others without explicit authorization is
// prohibited. Offenders will be held liable for the payment of damages.
// -----------------------------------------------------------------------------------------------------------
// File Name   : proxy_vsomeip_keyderivationfunction.h
//
// Purpose     : Implementation of file proxy_vsomeip_keyderivationfunction.h
// -----------------------------------------------------------------------------------------------------------
// CODE GENERATED BY        : CM Code Generator
//
// CODE GENERATOR VERSION   : 1.4.0.A-006
//
// GENERATED ON             : 2022-02-07T12:05:52+05:30
// -----------------------------------------------------------------------------------------------------------

#ifndef CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_KEYDERIVATIONFUNCTION_PROXY_VSOMEIP_KEYDERIVATIONFUNCTION_H_
#define CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_KEYDERIVATIONFUNCTION_PROXY_VSOMEIP_KEYDERIVATIONFUNCTION_H_

#include "service_desc_keyderivationfunction.h"
#include "ara/crypto/ipccom/cryp/keyderivationfunction/keyderivationfunction_proxy.h"

namespace ara
{
namespace crypto
{
namespace ipccom
{
namespace cryp
{
namespace keyderivationfunction
{
namespace keyderivationfunction_binding
{
namespace vsomeip
{

/// @brief Class for KeyDerivationFunctionImpl.
class KeyDerivationFunctionImpl : public proxy::KeyDerivationFunctionProxyBase, public ::ara::com::internal::vsomeip::proxy::ProxyImplBase {
 public :
  /// @brief Using for ProxyInterface.
  using ProxyInterface = proxy::KeyDerivationFunctionProxy;
  /// @brief Using for ServiceDescriptor.
  using ServiceDescriptor = descriptors::internal::Service;

  /// @brief Definition for KeyDerivationFunctionImpl.
  explicit KeyDerivationFunctionImpl(ara::com::internal::vsomeip::types::InstanceId instance) :
  ::ara::com::internal::vsomeip::proxy::ProxyImplBase(ServiceDescriptor::service_id, instance, ServiceDescriptor::service_version_major, ServiceDescriptor::service_version_minor),
  /// @brief Definition for AddSaltReadOnlyMem(instance).
    AddSaltReadOnlyMem(instance),
  /// @brief Definition for AddSecretSalt(instance).
    AddSecretSalt(instance),
  /// @brief Definition for ConfigIterations(instance).
    ConfigIterations(instance),
  /// @brief Definition for DeriveKey(instance).
    DeriveKey(instance),
  /// @brief Definition for DeriveSeed(instance).
    DeriveSeed(instance),
  /// @brief Definition for GetCryptoPrimitiveId(instance).
    GetCryptoPrimitiveId(instance),
  /// @brief Definition for GetExtensionService(instance).
    GetExtensionService(instance),
  /// @brief Definition for GetKeyIdSize(instance).
    GetKeyIdSize(instance),
  /// @brief Definition for GetTargetAlgId(instance).
    GetTargetAlgId(instance),
  /// @brief Definition for GetTargetAllowedUsage(instance).
    GetTargetAllowedUsage(instance),
  /// @brief Definition for GetTargetKeyBitLength(instance).
    GetTargetKeyBitLength(instance),
  /// @brief Definition for Init(instance).
    Init(instance),
  /// @brief Definition for IsInitialized(instance).
    IsInitialized(instance),
  /// @brief Definition for Reset(instance).
    Reset(instance),
  /// @brief Definition for SetSourceKeyMaterial(instance).
    SetSourceKeyMaterial(instance)
  {}
  /// @brief Definition for KeyDerivationFunctionImpl.
  ~KeyDerivationFunctionImpl() noexcept override {}

  /// @brief Definition for GetAddSaltReadOnlyMem.
        ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::AddSaltReadOnlyMem& GetAddSaltReadOnlyMem() noexcept override { return AddSaltReadOnlyMem; }
  /// @brief Definition for GetAddSecretSalt.
        ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::AddSecretSalt& GetAddSecretSalt() noexcept override { return AddSecretSalt; }
  /// @brief Definition for GetConfigIterations.
        ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::ConfigIterations& GetConfigIterations() noexcept override { return ConfigIterations; }
  /// @brief Definition for GetDeriveKey.
        ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::DeriveKey& GetDeriveKey() noexcept override { return DeriveKey; }
  /// @brief Definition for GetDeriveSeed.
        ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::DeriveSeed& GetDeriveSeed() noexcept override { return DeriveSeed; }
  /// @brief Definition for GetGetCryptoPrimitiveId.
        ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::GetCryptoPrimitiveId& GetGetCryptoPrimitiveId() noexcept override { return GetCryptoPrimitiveId; }
  /// @brief Definition for GetGetExtensionService.
        ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::GetExtensionService& GetGetExtensionService() noexcept override { return GetExtensionService; }
  /// @brief Definition for GetGetKeyIdSize.
        ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::GetKeyIdSize& GetGetKeyIdSize() noexcept override { return GetKeyIdSize; }
  /// @brief Definition for GetGetTargetAlgId.
        ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::GetTargetAlgId& GetGetTargetAlgId() noexcept override { return GetTargetAlgId; }
  /// @brief Definition for GetGetTargetAllowedUsage.
        ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::GetTargetAllowedUsage& GetGetTargetAllowedUsage() noexcept override { return GetTargetAllowedUsage; }
  /// @brief Definition for GetGetTargetKeyBitLength.
        ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::GetTargetKeyBitLength& GetGetTargetKeyBitLength() noexcept override { return GetTargetKeyBitLength; }
  /// @brief Definition for GetInit.
        ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::Init& GetInit() noexcept override { return Init; }
  /// @brief Definition for GetIsInitialized.
        ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::IsInitialized& GetIsInitialized() noexcept override { return IsInitialized; }
  /// @brief Definition for GetReset.
        ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::Reset& GetReset() noexcept override { return Reset; }
  /// @brief Definition for GetSetSourceKeyMaterial.
        ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::SetSourceKeyMaterial& GetSetSourceKeyMaterial() noexcept override { return SetSourceKeyMaterial; }

 private:
  /// @brief Method for AddSaltReadOnlyMem is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::AddSaltReadOnlyMem, ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::AddSaltReadOnlyMem::signature_type> AddSaltReadOnlyMem;
  /// @brief Method for AddSecretSalt is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::AddSecretSalt, ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::AddSecretSalt::signature_type> AddSecretSalt;
  /// @brief Method for ConfigIterations is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::ConfigIterations, ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::ConfigIterations::signature_type> ConfigIterations;
  /// @brief Method for DeriveKey is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::DeriveKey, ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::DeriveKey::signature_type> DeriveKey;
  /// @brief Method for DeriveSeed is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::DeriveSeed, ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::DeriveSeed::signature_type> DeriveSeed;
  /// @brief Method for GetCryptoPrimitiveId is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetCryptoPrimitiveId, ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::GetCryptoPrimitiveId::signature_type> GetCryptoPrimitiveId;
  /// @brief Method for GetExtensionService is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetExtensionService, ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::GetExtensionService::signature_type> GetExtensionService;
  /// @brief Method for GetKeyIdSize is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetKeyIdSize, ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::GetKeyIdSize::signature_type> GetKeyIdSize;
  /// @brief Method for GetTargetAlgId is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetTargetAlgId, ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::GetTargetAlgId::signature_type> GetTargetAlgId;
  /// @brief Method for GetTargetAllowedUsage is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetTargetAllowedUsage, ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::GetTargetAllowedUsage::signature_type> GetTargetAllowedUsage;
  /// @brief Method for GetTargetKeyBitLength is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetTargetKeyBitLength, ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::GetTargetKeyBitLength::signature_type> GetTargetKeyBitLength;
  /// @brief Method for Init is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::Init, ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::Init::signature_type> Init;
  /// @brief Method for IsInitialized is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::IsInitialized, ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::IsInitialized::signature_type> IsInitialized;
  /// @brief Method for Reset is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::Reset, ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::Reset::signature_type> Reset;
  /// @brief Method for SetSourceKeyMaterial is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::SetSourceKeyMaterial, ara::crypto::ipccom::cryp::keyderivationfunction::proxy::methods::SetSourceKeyMaterial::signature_type> SetSourceKeyMaterial;
};

} // namespace vsomeip
} // namespace keyderivationfunction_binding
} // namespace keyderivationfunction
} // namespace cryp
} // namespace ipccom
} // namespace crypto
} // namespace ara

#endif // CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_KEYDERIVATIONFUNCTION_PROXY_VSOMEIP_KEYDERIVATIONFUNCTION_H_

