// -----------------------------------------------------------------------------------------------------------
// Copyright (C) AVIN SYSTEMS PVT LTD 2021 - All Rights Reserved Reproduction, distribution and utilization
// of this document as well as the communication of its contents to others without explicit authorization is
// prohibited. Offenders will be held liable for the payment of damages.
// -----------------------------------------------------------------------------------------------------------
// File Name   : proxy_vsomeip_hashfunction.h
//
// Purpose     : Implementation of file proxy_vsomeip_hashfunction.h
// -----------------------------------------------------------------------------------------------------------
// CODE GENERATED BY        : CM Code Generator
//
// CODE GENERATOR VERSION   : 1.4.0.A-006
//
// GENERATED ON             : 2022-02-07T12:05:52+05:30
// -----------------------------------------------------------------------------------------------------------

#ifndef CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_HASHFUNCTION_PROXY_VSOMEIP_HASHFUNCTION_H_
#define CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_HASHFUNCTION_PROXY_VSOMEIP_HASHFUNCTION_H_

#include "service_desc_hashfunction.h"
#include "ara/crypto/ipccom/cryp/hashfunction/hashfunction_proxy.h"

namespace ara
{
namespace crypto
{
namespace ipccom
{
namespace cryp
{
namespace hashfunction
{
namespace hashfunction_binding
{
namespace vsomeip
{

/// @brief Class for HashFunctionImpl.
class HashFunctionImpl : public proxy::HashFunctionProxyBase, public ::ara::com::internal::vsomeip::proxy::ProxyImplBase {
 public :
  /// @brief Using for ProxyInterface.
  using ProxyInterface = proxy::HashFunctionProxy;
  /// @brief Using for ServiceDescriptor.
  using ServiceDescriptor = descriptors::internal::Service;

  /// @brief Definition for HashFunctionImpl.
  explicit HashFunctionImpl(ara::com::internal::vsomeip::types::InstanceId instance) :
  ::ara::com::internal::vsomeip::proxy::ProxyImplBase(ServiceDescriptor::service_id, instance, ServiceDescriptor::service_version_major, ServiceDescriptor::service_version_minor),
  /// @brief Definition for Finish(instance).
    Finish(instance),
  /// @brief Definition for GetCryptoPrimitiveId(instance).
    GetCryptoPrimitiveId(instance),
  /// @brief Definition for GetDigest(instance).
    GetDigest(instance),
  /// @brief Definition for GetDigestService(instance).
    GetDigestService(instance),
  /// @brief Definition for IsInitialized(instance).
    IsInitialized(instance),
  /// @brief Definition for StartNoParam(instance).
    StartNoParam(instance),
  /// @brief Definition for StartReadOnlyMem(instance).
    StartReadOnlyMem(instance),
  /// @brief Definition for StartSecretSeed(instance).
    StartSecretSeed(instance),
  /// @brief Definition for Update(instance).
    Update(instance),
  /// @brief Definition for UpdateReadOnlyMem(instance).
    UpdateReadOnlyMem(instance),
  /// @brief Definition for UpdateRestrictedUseObject(instance).
    UpdateRestrictedUseObject(instance)
  {}
  /// @brief Definition for HashFunctionImpl.
  ~HashFunctionImpl() noexcept override {}

  /// @brief Definition for GetFinish.
        ara::crypto::ipccom::cryp::hashfunction::proxy::methods::Finish& GetFinish() noexcept override { return Finish; }
  /// @brief Definition for GetGetCryptoPrimitiveId.
        ara::crypto::ipccom::cryp::hashfunction::proxy::methods::GetCryptoPrimitiveId& GetGetCryptoPrimitiveId() noexcept override { return GetCryptoPrimitiveId; }
  /// @brief Definition for GetGetDigest.
        ara::crypto::ipccom::cryp::hashfunction::proxy::methods::GetDigest& GetGetDigest() noexcept override { return GetDigest; }
  /// @brief Definition for GetGetDigestService.
        ara::crypto::ipccom::cryp::hashfunction::proxy::methods::GetDigestService& GetGetDigestService() noexcept override { return GetDigestService; }
  /// @brief Definition for GetIsInitialized.
        ara::crypto::ipccom::cryp::hashfunction::proxy::methods::IsInitialized& GetIsInitialized() noexcept override { return IsInitialized; }
  /// @brief Definition for GetStartNoParam.
        ara::crypto::ipccom::cryp::hashfunction::proxy::methods::StartNoParam& GetStartNoParam() noexcept override { return StartNoParam; }
  /// @brief Definition for GetStartReadOnlyMem.
        ara::crypto::ipccom::cryp::hashfunction::proxy::methods::StartReadOnlyMem& GetStartReadOnlyMem() noexcept override { return StartReadOnlyMem; }
  /// @brief Definition for GetStartSecretSeed.
        ara::crypto::ipccom::cryp::hashfunction::proxy::methods::StartSecretSeed& GetStartSecretSeed() noexcept override { return StartSecretSeed; }
  /// @brief Definition for GetUpdate.
        ara::crypto::ipccom::cryp::hashfunction::proxy::methods::Update& GetUpdate() noexcept override { return Update; }
  /// @brief Definition for GetUpdateReadOnlyMem.
        ara::crypto::ipccom::cryp::hashfunction::proxy::methods::UpdateReadOnlyMem& GetUpdateReadOnlyMem() noexcept override { return UpdateReadOnlyMem; }
  /// @brief Definition for GetUpdateRestrictedUseObject.
        ara::crypto::ipccom::cryp::hashfunction::proxy::methods::UpdateRestrictedUseObject& GetUpdateRestrictedUseObject() noexcept override { return UpdateRestrictedUseObject; }

 private:
  /// @brief Method for Finish is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::Finish, ara::crypto::ipccom::cryp::hashfunction::proxy::methods::Finish::signature_type> Finish;
  /// @brief Method for GetCryptoPrimitiveId is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetCryptoPrimitiveId, ara::crypto::ipccom::cryp::hashfunction::proxy::methods::GetCryptoPrimitiveId::signature_type> GetCryptoPrimitiveId;
  /// @brief Method for GetDigest is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetDigest, ara::crypto::ipccom::cryp::hashfunction::proxy::methods::GetDigest::signature_type> GetDigest;
  /// @brief Method for GetDigestService is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetDigestService, ara::crypto::ipccom::cryp::hashfunction::proxy::methods::GetDigestService::signature_type> GetDigestService;
  /// @brief Method for IsInitialized is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::IsInitialized, ara::crypto::ipccom::cryp::hashfunction::proxy::methods::IsInitialized::signature_type> IsInitialized;
  /// @brief Method for StartNoParam is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::StartNoParam, ara::crypto::ipccom::cryp::hashfunction::proxy::methods::StartNoParam::signature_type> StartNoParam;
  /// @brief Method for StartReadOnlyMem is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::StartReadOnlyMem, ara::crypto::ipccom::cryp::hashfunction::proxy::methods::StartReadOnlyMem::signature_type> StartReadOnlyMem;
  /// @brief Method for StartSecretSeed is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::StartSecretSeed, ara::crypto::ipccom::cryp::hashfunction::proxy::methods::StartSecretSeed::signature_type> StartSecretSeed;
  /// @brief Method for Update is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::Update, ara::crypto::ipccom::cryp::hashfunction::proxy::methods::Update::signature_type> Update;
  /// @brief Method for UpdateReadOnlyMem is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::UpdateReadOnlyMem, ara::crypto::ipccom::cryp::hashfunction::proxy::methods::UpdateReadOnlyMem::signature_type> UpdateReadOnlyMem;
  /// @brief Method for UpdateRestrictedUseObject is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::UpdateRestrictedUseObject, ara::crypto::ipccom::cryp::hashfunction::proxy::methods::UpdateRestrictedUseObject::signature_type> UpdateRestrictedUseObject;
};

} // namespace vsomeip
} // namespace hashfunction_binding
} // namespace hashfunction
} // namespace cryp
} // namespace ipccom
} // namespace crypto
} // namespace ara

#endif // CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_HASHFUNCTION_PROXY_VSOMEIP_HASHFUNCTION_H_

