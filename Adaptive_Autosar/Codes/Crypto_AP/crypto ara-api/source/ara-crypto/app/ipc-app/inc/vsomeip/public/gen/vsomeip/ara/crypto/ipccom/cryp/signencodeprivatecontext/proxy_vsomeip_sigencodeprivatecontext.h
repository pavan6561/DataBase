// -----------------------------------------------------------------------------------------------------------
// Copyright (C) AVIN SYSTEMS PVT LTD 2021 - All Rights Reserved Reproduction, distribution and utilization
// of this document as well as the communication of its contents to others without explicit authorization is
// prohibited. Offenders will be held liable for the payment of damages.
// -----------------------------------------------------------------------------------------------------------
// File Name   : proxy_vsomeip_sigencodeprivatecontext.h
//
// Purpose     : Implementation of file proxy_vsomeip_sigencodeprivatecontext.h
// -----------------------------------------------------------------------------------------------------------
// CODE GENERATED BY        : CM Code Generator
//
// CODE GENERATOR VERSION   : 1.4.0.A-006
//
// GENERATED ON             : 2022-02-07T12:05:52+05:30
// -----------------------------------------------------------------------------------------------------------

#ifndef CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_SIGNENCODEPRIVATECONTEXT_PROXY_VSOMEIP_SIGENCODEPRIVATECONTEXT_H_
#define CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_SIGNENCODEPRIVATECONTEXT_PROXY_VSOMEIP_SIGENCODEPRIVATECONTEXT_H_

#include "service_desc_sigencodeprivatecontext.h"
#include "ara/crypto/ipccom/cryp/signencodeprivatecontext/sigencodeprivatecontext_proxy.h"

namespace ara
{
namespace crypto
{
namespace ipccom
{
namespace cryp
{
namespace signencodeprivatecontext
{
namespace sigencodeprivatecontext_binding
{
namespace vsomeip
{

/// @brief Class for SigEncodePrivateContextImpl.
class SigEncodePrivateContextImpl : public proxy::SigEncodePrivateContextProxyBase, public ::ara::com::internal::vsomeip::proxy::ProxyImplBase {
 public :
  /// @brief Using for ProxyInterface.
  using ProxyInterface = proxy::SigEncodePrivateContextProxy;
  /// @brief Using for ServiceDescriptor.
  using ServiceDescriptor = descriptors::internal::Service;

  /// @brief Definition for SigEncodePrivateContextImpl.
  explicit SigEncodePrivateContextImpl(ara::com::internal::vsomeip::types::InstanceId instance) :
  ::ara::com::internal::vsomeip::proxy::ProxyImplBase(ServiceDescriptor::service_id, instance, ServiceDescriptor::service_version_major, ServiceDescriptor::service_version_minor),
  /// @brief Definition for GetCryptoPrimitiveId(instance).
    GetCryptoPrimitiveId(instance),
  /// @brief Definition for GetExtensionService(instance).
    GetExtensionService(instance),
  /// @brief Definition for GetMaxInputSize(instance).
    GetMaxInputSize(instance),
  /// @brief Definition for GetMaxOutputSize(instance).
    GetMaxOutputSize(instance),
  /// @brief Definition for IsInitialized(instance).
    IsInitialized(instance),
  /// @brief Definition for Reset(instance).
    Reset(instance),
  /// @brief Definition for SetKey(instance).
    SetKey(instance),
  /// @brief Definition for SignAndEncode(instance).
    SignAndEncode(instance)
  {}
  /// @brief Definition for SigEncodePrivateContextImpl.
  ~SigEncodePrivateContextImpl() noexcept override {}

  /// @brief Definition for GetGetCryptoPrimitiveId.
        ara::crypto::ipccom::cryp::signencodeprivatecontext::proxy::methods::GetCryptoPrimitiveId& GetGetCryptoPrimitiveId() noexcept override { return GetCryptoPrimitiveId; }
  /// @brief Definition for GetGetExtensionService.
        ara::crypto::ipccom::cryp::signencodeprivatecontext::proxy::methods::GetExtensionService& GetGetExtensionService() noexcept override { return GetExtensionService; }
  /// @brief Definition for GetGetMaxInputSize.
        ara::crypto::ipccom::cryp::signencodeprivatecontext::proxy::methods::GetMaxInputSize& GetGetMaxInputSize() noexcept override { return GetMaxInputSize; }
  /// @brief Definition for GetGetMaxOutputSize.
        ara::crypto::ipccom::cryp::signencodeprivatecontext::proxy::methods::GetMaxOutputSize& GetGetMaxOutputSize() noexcept override { return GetMaxOutputSize; }
  /// @brief Definition for GetIsInitialized.
        ara::crypto::ipccom::cryp::signencodeprivatecontext::proxy::methods::IsInitialized& GetIsInitialized() noexcept override { return IsInitialized; }
  /// @brief Definition for GetReset.
        ara::crypto::ipccom::cryp::signencodeprivatecontext::proxy::methods::Reset& GetReset() noexcept override { return Reset; }
  /// @brief Definition for GetSetKey.
        ara::crypto::ipccom::cryp::signencodeprivatecontext::proxy::methods::SetKey& GetSetKey() noexcept override { return SetKey; }
  /// @brief Definition for GetSignAndEncode.
        ara::crypto::ipccom::cryp::signencodeprivatecontext::proxy::methods::SignAndEncode& GetSignAndEncode() noexcept override { return SignAndEncode; }

 private:
  /// @brief Method for GetCryptoPrimitiveId is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetCryptoPrimitiveId, ara::crypto::ipccom::cryp::signencodeprivatecontext::proxy::methods::GetCryptoPrimitiveId::signature_type> GetCryptoPrimitiveId;
  /// @brief Method for GetExtensionService is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetExtensionService, ara::crypto::ipccom::cryp::signencodeprivatecontext::proxy::methods::GetExtensionService::signature_type> GetExtensionService;
  /// @brief Method for GetMaxInputSize is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetMaxInputSize, ara::crypto::ipccom::cryp::signencodeprivatecontext::proxy::methods::GetMaxInputSize::signature_type> GetMaxInputSize;
  /// @brief Method for GetMaxOutputSize is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetMaxOutputSize, ara::crypto::ipccom::cryp::signencodeprivatecontext::proxy::methods::GetMaxOutputSize::signature_type> GetMaxOutputSize;
  /// @brief Method for IsInitialized is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::IsInitialized, ara::crypto::ipccom::cryp::signencodeprivatecontext::proxy::methods::IsInitialized::signature_type> IsInitialized;
  /// @brief Method for Reset is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::Reset, ara::crypto::ipccom::cryp::signencodeprivatecontext::proxy::methods::Reset::signature_type> Reset;
  /// @brief Method for SetKey is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::SetKey, ara::crypto::ipccom::cryp::signencodeprivatecontext::proxy::methods::SetKey::signature_type> SetKey;
  /// @brief Method for SignAndEncode is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::SignAndEncode, ara::crypto::ipccom::cryp::signencodeprivatecontext::proxy::methods::SignAndEncode::signature_type> SignAndEncode;
};

} // namespace vsomeip
} // namespace sigencodeprivatecontext_binding
} // namespace signencodeprivatecontext
} // namespace cryp
} // namespace ipccom
} // namespace crypto
} // namespace ara

#endif // CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_SIGNENCODEPRIVATECONTEXT_PROXY_VSOMEIP_SIGENCODEPRIVATECONTEXT_H_

