// -----------------------------------------------------------------------------------------------------------
// Copyright (C) AVIN SYSTEMS PVT LTD 2021 - All Rights Reserved Reproduction, distribution and utilization
// of this document as well as the communication of its contents to others without explicit authorization is
// prohibited. Offenders will be held liable for the payment of damages.
// -----------------------------------------------------------------------------------------------------------
// File Name   : proxy_vsomeip_x509extensions.h
//
// Purpose     : Implementation of file proxy_vsomeip_x509extensions.h
// -----------------------------------------------------------------------------------------------------------
// CODE GENERATED BY        : CM Code Generator
//
// CODE GENERATOR VERSION   : 1.4.0.A-006
//
// GENERATED ON             : 2022-02-07T12:05:52+05:30
// -----------------------------------------------------------------------------------------------------------

#ifndef CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_X509_EXT_PROXY_VSOMEIP_X509EXTENSIONS_H_
#define CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_X509_EXT_PROXY_VSOMEIP_X509EXTENSIONS_H_

#include "service_desc_x509extensions.h"
#include "ara/crypto/ipccom/x509/ext/x509extensions_proxy.h"

namespace ara
{
namespace crypto
{
namespace ipccom
{
namespace x509
{
namespace ext
{
namespace x509extensions_binding
{
namespace vsomeip
{

/// @brief Class for X509ExtensionsImpl.
class X509ExtensionsImpl : public proxy::X509ExtensionsProxyBase, public ::ara::com::internal::vsomeip::proxy::ProxyImplBase {
 public :
  /// @brief Using for ProxyInterface.
  using ProxyInterface = proxy::X509ExtensionsProxy;
  /// @brief Using for ServiceDescriptor.
  using ServiceDescriptor = descriptors::internal::Service;

  /// @brief Definition for X509ExtensionsImpl.
  explicit X509ExtensionsImpl(ara::com::internal::vsomeip::types::InstanceId instance) :
  ::ara::com::internal::vsomeip::proxy::ProxyImplBase(ServiceDescriptor::service_id, instance, ServiceDescriptor::service_version_major, ServiceDescriptor::service_version_minor),
  /// @brief Definition for Count(instance).
    Count(instance),
  /// @brief Definition for ExportPublicly(instance).
    ExportPublicly(instance),
  /// @brief Definition for MyProvider(instance).
    MyProvider(instance)
  {}
  /// @brief Definition for X509ExtensionsImpl.
  ~X509ExtensionsImpl() noexcept override {}

  /// @brief Definition for GetCount.
        ara::crypto::ipccom::x509::ext::proxy::methods::Count& GetCount() noexcept override { return Count; }
  /// @brief Definition for GetExportPublicly.
        ara::crypto::ipccom::x509::ext::proxy::methods::ExportPublicly& GetExportPublicly() noexcept override { return ExportPublicly; }
  /// @brief Definition for GetMyProvider.
        ara::crypto::ipccom::x509::ext::proxy::methods::MyProvider& GetMyProvider() noexcept override { return MyProvider; }

 private:
  /// @brief Method for Count is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::Count, ara::crypto::ipccom::x509::ext::proxy::methods::Count::signature_type> Count;
  /// @brief Method for ExportPublicly is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::ExportPublicly, ara::crypto::ipccom::x509::ext::proxy::methods::ExportPublicly::signature_type> ExportPublicly;
  /// @brief Method for MyProvider is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::MyProvider, ara::crypto::ipccom::x509::ext::proxy::methods::MyProvider::signature_type> MyProvider;
};

} // namespace vsomeip
} // namespace x509extensions_binding
} // namespace ext
} // namespace x509
} // namespace ipccom
} // namespace crypto
} // namespace ara

#endif // CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_X509_EXT_PROXY_VSOMEIP_X509EXTENSIONS_H_

