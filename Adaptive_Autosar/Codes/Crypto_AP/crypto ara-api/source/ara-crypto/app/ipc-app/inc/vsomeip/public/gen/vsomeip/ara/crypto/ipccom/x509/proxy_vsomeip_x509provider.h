// -----------------------------------------------------------------------------------------------------------
// Copyright (C) AVIN SYSTEMS PVT LTD 2021 - All Rights Reserved Reproduction, distribution and utilization
// of this document as well as the communication of its contents to others without explicit authorization is
// prohibited. Offenders will be held liable for the payment of damages.
// -----------------------------------------------------------------------------------------------------------
// File Name   : proxy_vsomeip_x509provider.h
//
// Purpose     : Implementation of file proxy_vsomeip_x509provider.h
// -----------------------------------------------------------------------------------------------------------
// CODE GENERATED BY        : CM Code Generator
//
// CODE GENERATOR VERSION   : 1.4.0.A-006
//
// GENERATED ON             : 2022-02-15T10:49:48+05:30
// -----------------------------------------------------------------------------------------------------------

#ifndef CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_X509_PROXY_VSOMEIP_X509PROVIDER_H_
#define CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_X509_PROXY_VSOMEIP_X509PROVIDER_H_

#include "service_desc_x509provider.h"
#include "ara/crypto/ipccom/x509/x509provider_proxy.h"

namespace ara
{
namespace crypto
{
namespace ipccom
{
namespace x509
{
namespace x509provider_binding
{
namespace vsomeip
{

/// @brief Class for X509ProviderImpl.
class X509ProviderImpl : public proxy::X509ProviderProxyBase, public ::ara::com::internal::vsomeip::proxy::ProxyImplBase {
 public :
  /// @brief Using for ProxyInterface.
  using ProxyInterface = proxy::X509ProviderProxy;
  /// @brief Using for ServiceDescriptor.
  using ServiceDescriptor = descriptors::internal::Service;

  /// @brief Definition for X509ProviderImpl.
  explicit X509ProviderImpl(ara::com::internal::vsomeip::types::InstanceId instance) :
  ::ara::com::internal::vsomeip::proxy::ProxyImplBase(ServiceDescriptor::service_id, instance, ServiceDescriptor::service_version_major, ServiceDescriptor::service_version_minor),
  /// @brief Definition for BuildDn(instance).
    BuildDn(instance),
  /// @brief Definition for CheckCertStatus(instance).
    CheckCertStatus(instance),
  /// @brief Definition for CheckCertStatusWithCertList(instance).
    CheckCertStatusWithCertList(instance),
  /// @brief Definition for CleanupVolatileStorage(instance).
    CleanupVolatileStorage(instance),
  /// @brief Definition for CountCertsInChain(instance).
    CountCertsInChain(instance),
  /// @brief Definition for CreateCertSignRequest(instance).
    CreateCertSignRequest(instance),
  /// @brief Definition for CreateEmptyDn(instance).
    CreateEmptyDn(instance),
  /// @brief Definition for CreateEmptyExtensions(instance).
    CreateEmptyExtensions(instance),
  /// @brief Definition for CreateOcspRequest(instance).
    CreateOcspRequest(instance),
  /// @brief Definition for CreateOcspRequestWithCertList(instance).
    CreateOcspRequestWithCertList(instance),
  /// @brief Definition for DecodeDn(instance).
    DecodeDn(instance),
  /// @brief Definition for FindCertByDn(instance).
    FindCertByDn(instance),
  /// @brief Definition for FindCertByKeyIds(instance).
    FindCertByKeyIds(instance),
  /// @brief Definition for FindCertBySn(instance).
    FindCertBySn(instance),
  /// @brief Definition for Import(instance).
    Import(instance),
  /// @brief Definition for ImportCrl(instance).
    ImportCrl(instance),
  /// @brief Definition for LoadCertificate(instance).
    LoadCertificate(instance),
  /// @brief Definition for ParseCert(instance).
    ParseCert(instance),
  /// @brief Definition for ParseCertChain(instance).
    ParseCertChain(instance),
  /// @brief Definition for ParseCertChainVectorReadOnlyMemRegion(instance).
    ParseCertChainVectorReadOnlyMemRegion(instance),
  /// @brief Definition for ParseCertSignRequest(instance).
    ParseCertSignRequest(instance),
  /// @brief Definition for ParseOcspResponse(instance).
    ParseOcspResponse(instance),
  /// @brief Definition for Remove(instance).
    Remove(instance),
  /// @brief Definition for SetAsRootOfTrust(instance).
    SetAsRootOfTrust(instance),
  /// @brief Definition for SetPendingStatus(instance).
    SetPendingStatus(instance),
  /// @brief Definition for VerifyCert(instance).
    VerifyCert(instance),
  /// @brief Definition for VerifyCertChain(instance).
    VerifyCertChain(instance)
  {}
  /// @brief Definition for X509ProviderImpl.
  ~X509ProviderImpl() noexcept override {}

  /// @brief Definition for GetBuildDn.
        ara::crypto::ipccom::x509::proxy::methods::BuildDn& GetBuildDn() noexcept override { return BuildDn; }
  /// @brief Definition for GetCheckCertStatus.
        ara::crypto::ipccom::x509::proxy::methods::CheckCertStatus& GetCheckCertStatus() noexcept override { return CheckCertStatus; }
  /// @brief Definition for GetCheckCertStatusWithCertList.
        ara::crypto::ipccom::x509::proxy::methods::CheckCertStatusWithCertList& GetCheckCertStatusWithCertList() noexcept override { return CheckCertStatusWithCertList; }
  /// @brief Definition for GetCleanupVolatileStorage.
        ara::crypto::ipccom::x509::proxy::methods::CleanupVolatileStorage& GetCleanupVolatileStorage() noexcept override { return CleanupVolatileStorage; }
  /// @brief Definition for GetCountCertsInChain.
        ara::crypto::ipccom::x509::proxy::methods::CountCertsInChain& GetCountCertsInChain() noexcept override { return CountCertsInChain; }
  /// @brief Definition for GetCreateCertSignRequest.
        ara::crypto::ipccom::x509::proxy::methods::CreateCertSignRequest& GetCreateCertSignRequest() noexcept override { return CreateCertSignRequest; }
  /// @brief Definition for GetCreateEmptyDn.
        ara::crypto::ipccom::x509::proxy::methods::CreateEmptyDn& GetCreateEmptyDn() noexcept override { return CreateEmptyDn; }
  /// @brief Definition for GetCreateEmptyExtensions.
        ara::crypto::ipccom::x509::proxy::methods::CreateEmptyExtensions& GetCreateEmptyExtensions() noexcept override { return CreateEmptyExtensions; }
  /// @brief Definition for GetCreateOcspRequest.
        ara::crypto::ipccom::x509::proxy::methods::CreateOcspRequest& GetCreateOcspRequest() noexcept override { return CreateOcspRequest; }
  /// @brief Definition for GetCreateOcspRequestWithCertList.
        ara::crypto::ipccom::x509::proxy::methods::CreateOcspRequestWithCertList& GetCreateOcspRequestWithCertList() noexcept override { return CreateOcspRequestWithCertList; }
  /// @brief Definition for GetDecodeDn.
        ara::crypto::ipccom::x509::proxy::methods::DecodeDn& GetDecodeDn() noexcept override { return DecodeDn; }
  /// @brief Definition for GetFindCertByDn.
        ara::crypto::ipccom::x509::proxy::methods::FindCertByDn& GetFindCertByDn() noexcept override { return FindCertByDn; }
  /// @brief Definition for GetFindCertByKeyIds.
        ara::crypto::ipccom::x509::proxy::methods::FindCertByKeyIds& GetFindCertByKeyIds() noexcept override { return FindCertByKeyIds; }
  /// @brief Definition for GetFindCertBySn.
        ara::crypto::ipccom::x509::proxy::methods::FindCertBySn& GetFindCertBySn() noexcept override { return FindCertBySn; }
  /// @brief Definition for GetImport.
        ara::crypto::ipccom::x509::proxy::methods::Import& GetImport() noexcept override { return Import; }
  /// @brief Definition for GetImportCrl.
        ara::crypto::ipccom::x509::proxy::methods::ImportCrl& GetImportCrl() noexcept override { return ImportCrl; }
  /// @brief Definition for GetLoadCertificate.
        ara::crypto::ipccom::x509::proxy::methods::LoadCertificate& GetLoadCertificate() noexcept override { return LoadCertificate; }
  /// @brief Definition for GetParseCert.
        ara::crypto::ipccom::x509::proxy::methods::ParseCert& GetParseCert() noexcept override { return ParseCert; }
  /// @brief Definition for GetParseCertChain.
        ara::crypto::ipccom::x509::proxy::methods::ParseCertChain& GetParseCertChain() noexcept override { return ParseCertChain; }
  /// @brief Definition for GetParseCertChainVectorReadOnlyMemRegion.
        ara::crypto::ipccom::x509::proxy::methods::ParseCertChainVectorReadOnlyMemRegion& GetParseCertChainVectorReadOnlyMemRegion() noexcept override { return ParseCertChainVectorReadOnlyMemRegion; }
  /// @brief Definition for GetParseCertSignRequest.
        ara::crypto::ipccom::x509::proxy::methods::ParseCertSignRequest& GetParseCertSignRequest() noexcept override { return ParseCertSignRequest; }
  /// @brief Definition for GetParseOcspResponse.
        ara::crypto::ipccom::x509::proxy::methods::ParseOcspResponse& GetParseOcspResponse() noexcept override { return ParseOcspResponse; }
  /// @brief Definition for GetRemove.
        ara::crypto::ipccom::x509::proxy::methods::Remove& GetRemove() noexcept override { return Remove; }
  /// @brief Definition for GetSetAsRootOfTrust.
        ara::crypto::ipccom::x509::proxy::methods::SetAsRootOfTrust& GetSetAsRootOfTrust() noexcept override { return SetAsRootOfTrust; }
  /// @brief Definition for GetSetPendingStatus.
        ara::crypto::ipccom::x509::proxy::methods::SetPendingStatus& GetSetPendingStatus() noexcept override { return SetPendingStatus; }
  /// @brief Definition for GetVerifyCert.
        ara::crypto::ipccom::x509::proxy::methods::VerifyCert& GetVerifyCert() noexcept override { return VerifyCert; }
  /// @brief Definition for GetVerifyCertChain.
        ara::crypto::ipccom::x509::proxy::methods::VerifyCertChain& GetVerifyCertChain() noexcept override { return VerifyCertChain; }

 private:
  /// @brief Method for BuildDn is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::BuildDn, ara::crypto::ipccom::x509::proxy::methods::BuildDn::signature_type> BuildDn;
  /// @brief Method for CheckCertStatus is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CheckCertStatus, ara::crypto::ipccom::x509::proxy::methods::CheckCertStatus::signature_type> CheckCertStatus;
  /// @brief Method for CheckCertStatusWithCertList is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CheckCertStatusWithCertList, ara::crypto::ipccom::x509::proxy::methods::CheckCertStatusWithCertList::signature_type> CheckCertStatusWithCertList;
  /// @brief Method for CleanupVolatileStorage is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CleanupVolatileStorage, ara::crypto::ipccom::x509::proxy::methods::CleanupVolatileStorage::signature_type> CleanupVolatileStorage;
  /// @brief Method for CountCertsInChain is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CountCertsInChain, ara::crypto::ipccom::x509::proxy::methods::CountCertsInChain::signature_type> CountCertsInChain;
  /// @brief Method for CreateCertSignRequest is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateCertSignRequest, ara::crypto::ipccom::x509::proxy::methods::CreateCertSignRequest::signature_type> CreateCertSignRequest;
  /// @brief Method for CreateEmptyDn is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateEmptyDn, ara::crypto::ipccom::x509::proxy::methods::CreateEmptyDn::signature_type> CreateEmptyDn;
  /// @brief Method for CreateEmptyExtensions is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateEmptyExtensions, ara::crypto::ipccom::x509::proxy::methods::CreateEmptyExtensions::signature_type> CreateEmptyExtensions;
  /// @brief Method for CreateOcspRequest is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateOcspRequest, ara::crypto::ipccom::x509::proxy::methods::CreateOcspRequest::signature_type> CreateOcspRequest;
  /// @brief Method for CreateOcspRequestWithCertList is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateOcspRequestWithCertList, ara::crypto::ipccom::x509::proxy::methods::CreateOcspRequestWithCertList::signature_type> CreateOcspRequestWithCertList;
  /// @brief Method for DecodeDn is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::DecodeDn, ara::crypto::ipccom::x509::proxy::methods::DecodeDn::signature_type> DecodeDn;
  /// @brief Method for FindCertByDn is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::FindCertByDn, ara::crypto::ipccom::x509::proxy::methods::FindCertByDn::signature_type> FindCertByDn;
  /// @brief Method for FindCertByKeyIds is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::FindCertByKeyIds, ara::crypto::ipccom::x509::proxy::methods::FindCertByKeyIds::signature_type> FindCertByKeyIds;
  /// @brief Method for FindCertBySn is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::FindCertBySn, ara::crypto::ipccom::x509::proxy::methods::FindCertBySn::signature_type> FindCertBySn;
  /// @brief Method for Import is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::Import, ara::crypto::ipccom::x509::proxy::methods::Import::signature_type> Import;
  /// @brief Method for ImportCrl is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::ImportCrl, ara::crypto::ipccom::x509::proxy::methods::ImportCrl::signature_type> ImportCrl;
  /// @brief Method for LoadCertificate is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::LoadCertificate, ara::crypto::ipccom::x509::proxy::methods::LoadCertificate::signature_type> LoadCertificate;
  /// @brief Method for ParseCert is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::ParseCert, ara::crypto::ipccom::x509::proxy::methods::ParseCert::signature_type> ParseCert;
  /// @brief Method for ParseCertChain is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::ParseCertChain, ara::crypto::ipccom::x509::proxy::methods::ParseCertChain::signature_type> ParseCertChain;
  /// @brief Method for ParseCertChainVectorReadOnlyMemRegion is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::ParseCertChainVectorReadOnlyMemRegion, ara::crypto::ipccom::x509::proxy::methods::ParseCertChainVectorReadOnlyMemRegion::signature_type> ParseCertChainVectorReadOnlyMemRegion;
  /// @brief Method for ParseCertSignRequest is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::ParseCertSignRequest, ara::crypto::ipccom::x509::proxy::methods::ParseCertSignRequest::signature_type> ParseCertSignRequest;
  /// @brief Method for ParseOcspResponse is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::ParseOcspResponse, ara::crypto::ipccom::x509::proxy::methods::ParseOcspResponse::signature_type> ParseOcspResponse;
  /// @brief Method for Remove is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::Remove, ara::crypto::ipccom::x509::proxy::methods::Remove::signature_type> Remove;
  /// @brief Method for SetAsRootOfTrust is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::SetAsRootOfTrust, ara::crypto::ipccom::x509::proxy::methods::SetAsRootOfTrust::signature_type> SetAsRootOfTrust;
  /// @brief Method for SetPendingStatus is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::SetPendingStatus, ara::crypto::ipccom::x509::proxy::methods::SetPendingStatus::signature_type> SetPendingStatus;
  /// @brief Method for VerifyCert is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::VerifyCert, ara::crypto::ipccom::x509::proxy::methods::VerifyCert::signature_type> VerifyCert;
  /// @brief Method for VerifyCertChain is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::VerifyCertChain, ara::crypto::ipccom::x509::proxy::methods::VerifyCertChain::signature_type> VerifyCertChain;
};

} // namespace vsomeip
} // namespace x509provider_binding
} // namespace x509
} // namespace ipccom
} // namespace crypto
} // namespace ara

#endif // CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_X509_PROXY_VSOMEIP_X509PROVIDER_H_

