// -----------------------------------------------------------------------------------------------------------
// Copyright (C) AVIN SYSTEMS PVT LTD 2021 - All Rights Reserved Reproduction, distribution and utilization
// of this document as well as the communication of its contents to others without explicit authorization is
// prohibited. Offenders will be held liable for the payment of damages.
// -----------------------------------------------------------------------------------------------------------
// File Name   : proxy_vsomeip_symmetrickeywrappercontext.h
//
// Purpose     : Implementation of file proxy_vsomeip_symmetrickeywrappercontext.h
// -----------------------------------------------------------------------------------------------------------
// CODE GENERATED BY        : CM Code Generator
//
// CODE GENERATOR VERSION   : 1.4.0.A-006
//
// GENERATED ON             : 2022-02-07T12:05:52+05:30
// -----------------------------------------------------------------------------------------------------------

#ifndef CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_SYMMETRICKEYWRAPPER_PROXY_VSOMEIP_SYMMETRICKEYWRAPPERCONTEXT_H_
#define CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_SYMMETRICKEYWRAPPER_PROXY_VSOMEIP_SYMMETRICKEYWRAPPERCONTEXT_H_

#include "service_desc_symmetrickeywrappercontext.h"
#include "ara/crypto/ipccom/cryp/symmetrickeywrapper/symmetrickeywrappercontext_proxy.h"

namespace ara
{
namespace crypto
{
namespace ipccom
{
namespace cryp
{
namespace symmetrickeywrapper
{
namespace symmetrickeywrappercontext_binding
{
namespace vsomeip
{

/// @brief Class for SymmetricKeyWrapperContextImpl.
class SymmetricKeyWrapperContextImpl : public proxy::SymmetricKeyWrapperContextProxyBase, public ::ara::com::internal::vsomeip::proxy::ProxyImplBase {
 public :
  /// @brief Using for ProxyInterface.
  using ProxyInterface = proxy::SymmetricKeyWrapperContextProxy;
  /// @brief Using for ServiceDescriptor.
  using ServiceDescriptor = descriptors::internal::Service;

  /// @brief Definition for SymmetricKeyWrapperContextImpl.
  explicit SymmetricKeyWrapperContextImpl(ara::com::internal::vsomeip::types::InstanceId instance) :
  ::ara::com::internal::vsomeip::proxy::ProxyImplBase(ServiceDescriptor::service_id, instance, ServiceDescriptor::service_version_major, ServiceDescriptor::service_version_minor),
  /// @brief Definition for CalculateWrappedKeySize(instance).
    CalculateWrappedKeySize(instance),
  /// @brief Definition for GetCryptoPrimitiveId(instance).
    GetCryptoPrimitiveId(instance),
  /// @brief Definition for GetExtensionService(instance).
    GetExtensionService(instance),
  /// @brief Definition for GetMaxTargetKeyLength(instance).
    GetMaxTargetKeyLength(instance),
  /// @brief Definition for GetTargetKeyGranularity(instance).
    GetTargetKeyGranularity(instance),
  /// @brief Definition for IsInitialized(instance).
    IsInitialized(instance),
  /// @brief Definition for Reset(instance).
    Reset(instance),
  /// @brief Definition for SetKey(instance).
    SetKey(instance),
  /// @brief Definition for UnwrapKey(instance).
    UnwrapKey(instance),
  /// @brief Definition for UnwrapSeed(instance).
    UnwrapSeed(instance),
  /// @brief Definition for WrapKeyMaterial(instance).
    WrapKeyMaterial(instance)
  {}
  /// @brief Definition for SymmetricKeyWrapperContextImpl.
  ~SymmetricKeyWrapperContextImpl() noexcept override {}

  /// @brief Definition for GetCalculateWrappedKeySize.
        ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::CalculateWrappedKeySize& GetCalculateWrappedKeySize() noexcept override { return CalculateWrappedKeySize; }
  /// @brief Definition for GetGetCryptoPrimitiveId.
        ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::GetCryptoPrimitiveId& GetGetCryptoPrimitiveId() noexcept override { return GetCryptoPrimitiveId; }
  /// @brief Definition for GetGetExtensionService.
        ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::GetExtensionService& GetGetExtensionService() noexcept override { return GetExtensionService; }
  /// @brief Definition for GetGetMaxTargetKeyLength.
        ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::GetMaxTargetKeyLength& GetGetMaxTargetKeyLength() noexcept override { return GetMaxTargetKeyLength; }
  /// @brief Definition for GetGetTargetKeyGranularity.
        ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::GetTargetKeyGranularity& GetGetTargetKeyGranularity() noexcept override { return GetTargetKeyGranularity; }
  /// @brief Definition for GetIsInitialized.
        ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::IsInitialized& GetIsInitialized() noexcept override { return IsInitialized; }
  /// @brief Definition for GetReset.
        ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::Reset& GetReset() noexcept override { return Reset; }
  /// @brief Definition for GetSetKey.
        ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::SetKey& GetSetKey() noexcept override { return SetKey; }
  /// @brief Definition for GetUnwrapKey.
        ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::UnwrapKey& GetUnwrapKey() noexcept override { return UnwrapKey; }
  /// @brief Definition for GetUnwrapSeed.
        ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::UnwrapSeed& GetUnwrapSeed() noexcept override { return UnwrapSeed; }
  /// @brief Definition for GetWrapKeyMaterial.
        ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::WrapKeyMaterial& GetWrapKeyMaterial() noexcept override { return WrapKeyMaterial; }

 private:
  /// @brief Method for CalculateWrappedKeySize is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CalculateWrappedKeySize, ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::CalculateWrappedKeySize::signature_type> CalculateWrappedKeySize;
  /// @brief Method for GetCryptoPrimitiveId is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetCryptoPrimitiveId, ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::GetCryptoPrimitiveId::signature_type> GetCryptoPrimitiveId;
  /// @brief Method for GetExtensionService is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetExtensionService, ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::GetExtensionService::signature_type> GetExtensionService;
  /// @brief Method for GetMaxTargetKeyLength is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetMaxTargetKeyLength, ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::GetMaxTargetKeyLength::signature_type> GetMaxTargetKeyLength;
  /// @brief Method for GetTargetKeyGranularity is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetTargetKeyGranularity, ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::GetTargetKeyGranularity::signature_type> GetTargetKeyGranularity;
  /// @brief Method for IsInitialized is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::IsInitialized, ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::IsInitialized::signature_type> IsInitialized;
  /// @brief Method for Reset is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::Reset, ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::Reset::signature_type> Reset;
  /// @brief Method for SetKey is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::SetKey, ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::SetKey::signature_type> SetKey;
  /// @brief Method for UnwrapKey is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::UnwrapKey, ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::UnwrapKey::signature_type> UnwrapKey;
  /// @brief Method for UnwrapSeed is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::UnwrapSeed, ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::UnwrapSeed::signature_type> UnwrapSeed;
  /// @brief Method for WrapKeyMaterial is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::WrapKeyMaterial, ara::crypto::ipccom::cryp::symmetrickeywrapper::proxy::methods::WrapKeyMaterial::signature_type> WrapKeyMaterial;
};

} // namespace vsomeip
} // namespace symmetrickeywrappercontext_binding
} // namespace symmetrickeywrapper
} // namespace cryp
} // namespace ipccom
} // namespace crypto
} // namespace ara

#endif // CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_SYMMETRICKEYWRAPPER_PROXY_VSOMEIP_SYMMETRICKEYWRAPPERCONTEXT_H_

