// -----------------------------------------------------------------------------------------------------------
// Copyright (C) AVIN SYSTEMS PVT LTD 2021 - All Rights Reserved Reproduction, distribution and utilization
// of this document as well as the communication of its contents to others without explicit authorization is
// prohibited. Offenders will be held liable for the payment of damages.
// -----------------------------------------------------------------------------------------------------------
// File Name   : proxy_vsomeip_extensionservice.h
//
// Purpose     : Implementation of file proxy_vsomeip_extensionservice.h
// -----------------------------------------------------------------------------------------------------------
// CODE GENERATED BY        : CM Code Generator
//
// CODE GENERATOR VERSION   : 1.4.0.A-006
//
// GENERATED ON             : 2022-03-08T13:50:38+05:30
// -----------------------------------------------------------------------------------------------------------

#ifndef CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_CRYSERVICE_EXTENSIONSERVICE_PROXY_VSOMEIP_EXTENSIONSERVICE_H_
#define CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_CRYSERVICE_EXTENSIONSERVICE_PROXY_VSOMEIP_EXTENSIONSERVICE_H_

#include "service_desc_extensionservice.h"
#include "ara/crypto/ipccom/cryp/cryservice/extensionservice/extensionservice_proxy.h"

namespace ara
{
namespace crypto
{
namespace ipccom
{
namespace cryp
{
namespace cryservice
{
namespace extensionservice
{
namespace extensionservice_binding
{
namespace vsomeip
{

/// @brief Class for ExtensionServiceImpl.
class ExtensionServiceImpl : public proxy::ExtensionServiceProxyBase, public ::ara::com::internal::vsomeip::proxy::ProxyImplBase {
 public :
  /// @brief Using for ProxyInterface.
  using ProxyInterface = proxy::ExtensionServiceProxy;
  /// @brief Using for ServiceDescriptor.
  using ServiceDescriptor = descriptors::internal::Service;

  /// @brief Definition for ExtensionServiceImpl.
  explicit ExtensionServiceImpl(ara::com::internal::vsomeip::types::InstanceId instance) :
  ::ara::com::internal::vsomeip::proxy::ProxyImplBase(ServiceDescriptor::service_id, instance, ServiceDescriptor::service_version_major, ServiceDescriptor::service_version_minor),
  /// @brief Definition for GetActualKeyBitLength(instance).
    GetActualKeyBitLength(instance),
  /// @brief Definition for GetActualKeyCOUID(instance).
    GetActualKeyCOUID(instance),
  /// @brief Definition for GetAllowedUsage(instance).
    GetAllowedUsage(instance),
  /// @brief Definition for GetMaxKeyBitLength(instance).
    GetMaxKeyBitLength(instance),
  /// @brief Definition for GetMinKeyBitLength(instance).
    GetMinKeyBitLength(instance),
  /// @brief Definition for IsKeyAvailable(instance).
    IsKeyAvailable(instance),
  /// @brief Definition for IsKeyBitLengthSupported(instance).
    IsKeyBitLengthSupported(instance)
  {}
  /// @brief Definition for ExtensionServiceImpl.
  ~ExtensionServiceImpl() noexcept override {}

  /// @brief Definition for GetGetActualKeyBitLength.
        ara::crypto::ipccom::cryp::cryservice::extensionservice::proxy::methods::GetActualKeyBitLength& GetGetActualKeyBitLength() noexcept override { return GetActualKeyBitLength; }
  /// @brief Definition for GetGetActualKeyCOUID.
        ara::crypto::ipccom::cryp::cryservice::extensionservice::proxy::methods::GetActualKeyCOUID& GetGetActualKeyCOUID() noexcept override { return GetActualKeyCOUID; }
  /// @brief Definition for GetGetAllowedUsage.
        ara::crypto::ipccom::cryp::cryservice::extensionservice::proxy::methods::GetAllowedUsage& GetGetAllowedUsage() noexcept override { return GetAllowedUsage; }
  /// @brief Definition for GetGetMaxKeyBitLength.
        ara::crypto::ipccom::cryp::cryservice::extensionservice::proxy::methods::GetMaxKeyBitLength& GetGetMaxKeyBitLength() noexcept override { return GetMaxKeyBitLength; }
  /// @brief Definition for GetGetMinKeyBitLength.
        ara::crypto::ipccom::cryp::cryservice::extensionservice::proxy::methods::GetMinKeyBitLength& GetGetMinKeyBitLength() noexcept override { return GetMinKeyBitLength; }
  /// @brief Definition for GetIsKeyAvailable.
        ara::crypto::ipccom::cryp::cryservice::extensionservice::proxy::methods::IsKeyAvailable& GetIsKeyAvailable() noexcept override { return IsKeyAvailable; }
  /// @brief Definition for GetIsKeyBitLengthSupported.
        ara::crypto::ipccom::cryp::cryservice::extensionservice::proxy::methods::IsKeyBitLengthSupported& GetIsKeyBitLengthSupported() noexcept override { return IsKeyBitLengthSupported; }

 private:
  /// @brief Method for GetActualKeyBitLength is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetActualKeyBitLength, ara::crypto::ipccom::cryp::cryservice::extensionservice::proxy::methods::GetActualKeyBitLength::signature_type> GetActualKeyBitLength;
  /// @brief Method for GetActualKeyCOUID is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetActualKeyCOUID, ara::crypto::ipccom::cryp::cryservice::extensionservice::proxy::methods::GetActualKeyCOUID::signature_type> GetActualKeyCOUID;
  /// @brief Method for GetAllowedUsage is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetAllowedUsage, ara::crypto::ipccom::cryp::cryservice::extensionservice::proxy::methods::GetAllowedUsage::signature_type> GetAllowedUsage;
  /// @brief Method for GetMaxKeyBitLength is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetMaxKeyBitLength, ara::crypto::ipccom::cryp::cryservice::extensionservice::proxy::methods::GetMaxKeyBitLength::signature_type> GetMaxKeyBitLength;
  /// @brief Method for GetMinKeyBitLength is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetMinKeyBitLength, ara::crypto::ipccom::cryp::cryservice::extensionservice::proxy::methods::GetMinKeyBitLength::signature_type> GetMinKeyBitLength;
  /// @brief Method for IsKeyAvailable is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::IsKeyAvailable, ara::crypto::ipccom::cryp::cryservice::extensionservice::proxy::methods::IsKeyAvailable::signature_type> IsKeyAvailable;
  /// @brief Method for IsKeyBitLengthSupported is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::IsKeyBitLengthSupported, ara::crypto::ipccom::cryp::cryservice::extensionservice::proxy::methods::IsKeyBitLengthSupported::signature_type> IsKeyBitLengthSupported;
};

} // namespace vsomeip
} // namespace extensionservice_binding
} // namespace extensionservice
} // namespace cryservice
} // namespace cryp
} // namespace ipccom
} // namespace crypto
} // namespace ara

#endif // CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_CRYSERVICE_EXTENSIONSERVICE_PROXY_VSOMEIP_EXTENSIONSERVICE_H_

