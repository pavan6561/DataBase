// -----------------------------------------------------------------------------------------------------------
// Copyright (C) AVIN SYSTEMS PVT LTD 2021 - All Rights Reserved Reproduction, distribution and utilization
// of this document as well as the communication of its contents to others without explicit authorization is
// prohibited. Offenders will be held liable for the payment of damages.
// -----------------------------------------------------------------------------------------------------------
// File Name   : proxy_vsomeip_x509publickeyinfo.h
//
// Purpose     : Implementation of file proxy_vsomeip_x509publickeyinfo.h
// -----------------------------------------------------------------------------------------------------------
// CODE GENERATED BY        : CM Code Generator
//
// CODE GENERATOR VERSION   : 1.4.0.A-006
//
// GENERATED ON             : 2022-02-07T12:05:52+05:30
// -----------------------------------------------------------------------------------------------------------

#ifndef CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_X509_PKI_PROXY_VSOMEIP_X509PUBLICKEYINFO_H_
#define CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_X509_PKI_PROXY_VSOMEIP_X509PUBLICKEYINFO_H_

#include "service_desc_x509publickeyinfo.h"
#include "ara/crypto/ipccom/x509/pki/x509publickeyinfo_proxy.h"

namespace ara
{
namespace crypto
{
namespace ipccom
{
namespace x509
{
namespace pki
{
namespace x509publickeyinfo_binding
{
namespace vsomeip
{

/// @brief Class for X509PublicKeyInfoImpl.
class X509PublicKeyInfoImpl : public proxy::X509PublicKeyInfoProxyBase, public ::ara::com::internal::vsomeip::proxy::ProxyImplBase {
 public :
  /// @brief Using for ProxyInterface.
  using ProxyInterface = proxy::X509PublicKeyInfoProxy;
  /// @brief Using for ServiceDescriptor.
  using ServiceDescriptor = descriptors::internal::Service;

  /// @brief Definition for X509PublicKeyInfoImpl.
  explicit X509PublicKeyInfoImpl(ara::com::internal::vsomeip::types::InstanceId instance) :
  ::ara::com::internal::vsomeip::proxy::ProxyImplBase(ServiceDescriptor::service_id, instance, ServiceDescriptor::service_version_major, ServiceDescriptor::service_version_minor),
  /// @brief Definition for ExportPublicly(instance).
    ExportPublicly(instance),
  /// @brief Definition for GetAlgorithmId(instance).
    GetAlgorithmId(instance),
  /// @brief Definition for GetPublicKey(instance).
    GetPublicKey(instance),
  /// @brief Definition for GetRequiredHashAlgId(instance).
    GetRequiredHashAlgId(instance),
  /// @brief Definition for GetRequiredHashSize(instance).
    GetRequiredHashSize(instance),
  /// @brief Definition for GetSignatureSize(instance).
    GetSignatureSize(instance),
  /// @brief Definition for IsSameKey(instance).
    IsSameKey(instance)
  {}
  /// @brief Definition for X509PublicKeyInfoImpl.
  ~X509PublicKeyInfoImpl() noexcept override {}

  /// @brief Definition for GetExportPublicly.
        ara::crypto::ipccom::x509::pki::proxy::methods::ExportPublicly& GetExportPublicly() noexcept override { return ExportPublicly; }
  /// @brief Definition for GetGetAlgorithmId.
        ara::crypto::ipccom::x509::pki::proxy::methods::GetAlgorithmId& GetGetAlgorithmId() noexcept override { return GetAlgorithmId; }
  /// @brief Definition for GetGetPublicKey.
        ara::crypto::ipccom::x509::pki::proxy::methods::GetPublicKey& GetGetPublicKey() noexcept override { return GetPublicKey; }
  /// @brief Definition for GetGetRequiredHashAlgId.
        ara::crypto::ipccom::x509::pki::proxy::methods::GetRequiredHashAlgId& GetGetRequiredHashAlgId() noexcept override { return GetRequiredHashAlgId; }
  /// @brief Definition for GetGetRequiredHashSize.
        ara::crypto::ipccom::x509::pki::proxy::methods::GetRequiredHashSize& GetGetRequiredHashSize() noexcept override { return GetRequiredHashSize; }
  /// @brief Definition for GetGetSignatureSize.
        ara::crypto::ipccom::x509::pki::proxy::methods::GetSignatureSize& GetGetSignatureSize() noexcept override { return GetSignatureSize; }
  /// @brief Definition for GetIsSameKey.
        ara::crypto::ipccom::x509::pki::proxy::methods::IsSameKey& GetIsSameKey() noexcept override { return IsSameKey; }

 private:
  /// @brief Method for ExportPublicly is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::ExportPublicly, ara::crypto::ipccom::x509::pki::proxy::methods::ExportPublicly::signature_type> ExportPublicly;
  /// @brief Method for GetAlgorithmId is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetAlgorithmId, ara::crypto::ipccom::x509::pki::proxy::methods::GetAlgorithmId::signature_type> GetAlgorithmId;
  /// @brief Method for GetPublicKey is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetPublicKey, ara::crypto::ipccom::x509::pki::proxy::methods::GetPublicKey::signature_type> GetPublicKey;
  /// @brief Method for GetRequiredHashAlgId is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetRequiredHashAlgId, ara::crypto::ipccom::x509::pki::proxy::methods::GetRequiredHashAlgId::signature_type> GetRequiredHashAlgId;
  /// @brief Method for GetRequiredHashSize is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetRequiredHashSize, ara::crypto::ipccom::x509::pki::proxy::methods::GetRequiredHashSize::signature_type> GetRequiredHashSize;
  /// @brief Method for GetSignatureSize is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetSignatureSize, ara::crypto::ipccom::x509::pki::proxy::methods::GetSignatureSize::signature_type> GetSignatureSize;
  /// @brief Method for IsSameKey is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::IsSameKey, ara::crypto::ipccom::x509::pki::proxy::methods::IsSameKey::signature_type> IsSameKey;
};

} // namespace vsomeip
} // namespace x509publickeyinfo_binding
} // namespace pki
} // namespace x509
} // namespace ipccom
} // namespace crypto
} // namespace ara

#endif // CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_X509_PKI_PROXY_VSOMEIP_X509PUBLICKEYINFO_H_

