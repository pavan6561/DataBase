// -----------------------------------------------------------------------------------------------------------
// Copyright (C) AVIN SYSTEMS PVT LTD 2021 - All Rights Reserved Reproduction, distribution and utilization
// of this document as well as the communication of its contents to others without explicit authorization is
// prohibited. Offenders will be held liable for the payment of damages.
// -----------------------------------------------------------------------------------------------------------
// File Name   : proxy_vsomeip_x509dn.h
//
// Purpose     : Implementation of file proxy_vsomeip_x509dn.h
// -----------------------------------------------------------------------------------------------------------
// CODE GENERATED BY        : CM Code Generator
//
// CODE GENERATOR VERSION   : 1.4.0.A-006
//
// GENERATED ON             : 2022-02-07T12:05:52+05:30
// -----------------------------------------------------------------------------------------------------------

#ifndef CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_X509_X509DN_PROXY_VSOMEIP_X509DN_H_
#define CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_X509_X509DN_PROXY_VSOMEIP_X509DN_H_

#include "service_desc_x509dn.h"
#include "ara/crypto/ipccom/x509/x509dn/x509dn_proxy.h"

namespace ara
{
namespace crypto
{
namespace ipccom
{
namespace x509
{
namespace x509dn
{
namespace x509dn_binding
{
namespace vsomeip
{

/// @brief Class for X509DNImpl.
class X509DNImpl : public proxy::X509DNProxyBase, public ::ara::com::internal::vsomeip::proxy::ProxyImplBase {
 public :
  /// @brief Using for ProxyInterface.
  using ProxyInterface = proxy::X509DNProxy;
  /// @brief Using for ServiceDescriptor.
  using ServiceDescriptor = descriptors::internal::Service;

  /// @brief Definition for X509DNImpl.
  explicit X509DNImpl(ara::com::internal::vsomeip::types::InstanceId instance) :
  ::ara::com::internal::vsomeip::proxy::ProxyImplBase(ServiceDescriptor::service_id, instance, ServiceDescriptor::service_version_major, ServiceDescriptor::service_version_minor),
  /// @brief Definition for ExportPublicly(instance).
    ExportPublicly(instance),
  /// @brief Definition for GetAttribute(instance).
    GetAttribute(instance),
  /// @brief Definition for GetAttributeWithIndex(instance).
    GetAttributeWithIndex(instance),
  /// @brief Definition for GetDnString(instance).
    GetDnString(instance),
  /// @brief Definition for MyProvider(instance).
    MyProvider(instance),
  /// @brief Definition for SetAttribute(instance).
    SetAttribute(instance),
  /// @brief Definition for SetAttributeWithIndex(instance).
    SetAttributeWithIndex(instance),
  /// @brief Definition for SetDn(instance).
    SetDn(instance)
  {}
  /// @brief Definition for X509DNImpl.
  ~X509DNImpl() noexcept override {}

  /// @brief Definition for GetExportPublicly.
        ara::crypto::ipccom::x509::x509dn::proxy::methods::ExportPublicly& GetExportPublicly() noexcept override { return ExportPublicly; }
  /// @brief Definition for GetGetAttribute.
        ara::crypto::ipccom::x509::x509dn::proxy::methods::GetAttribute& GetGetAttribute() noexcept override { return GetAttribute; }
  /// @brief Definition for GetGetAttributeWithIndex.
        ara::crypto::ipccom::x509::x509dn::proxy::methods::GetAttributeWithIndex& GetGetAttributeWithIndex() noexcept override { return GetAttributeWithIndex; }
  /// @brief Definition for GetGetDnString.
        ara::crypto::ipccom::x509::x509dn::proxy::methods::GetDnString& GetGetDnString() noexcept override { return GetDnString; }
  /// @brief Definition for GetMyProvider.
        ara::crypto::ipccom::x509::x509dn::proxy::methods::MyProvider& GetMyProvider() noexcept override { return MyProvider; }
  /// @brief Definition for GetSetAttribute.
        ara::crypto::ipccom::x509::x509dn::proxy::methods::SetAttribute& GetSetAttribute() noexcept override { return SetAttribute; }
  /// @brief Definition for GetSetAttributeWithIndex.
        ara::crypto::ipccom::x509::x509dn::proxy::methods::SetAttributeWithIndex& GetSetAttributeWithIndex() noexcept override { return SetAttributeWithIndex; }
  /// @brief Definition for GetSetDn.
        ara::crypto::ipccom::x509::x509dn::proxy::methods::SetDn& GetSetDn() noexcept override { return SetDn; }

 private:
  /// @brief Method for ExportPublicly is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::ExportPublicly, ara::crypto::ipccom::x509::x509dn::proxy::methods::ExportPublicly::signature_type> ExportPublicly;
  /// @brief Method for GetAttribute is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetAttribute, ara::crypto::ipccom::x509::x509dn::proxy::methods::GetAttribute::signature_type> GetAttribute;
  /// @brief Method for GetAttributeWithIndex is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetAttributeWithIndex, ara::crypto::ipccom::x509::x509dn::proxy::methods::GetAttributeWithIndex::signature_type> GetAttributeWithIndex;
  /// @brief Method for GetDnString is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetDnString, ara::crypto::ipccom::x509::x509dn::proxy::methods::GetDnString::signature_type> GetDnString;
  /// @brief Method for MyProvider is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::MyProvider, ara::crypto::ipccom::x509::x509dn::proxy::methods::MyProvider::signature_type> MyProvider;
  /// @brief Method for SetAttribute is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::SetAttribute, ara::crypto::ipccom::x509::x509dn::proxy::methods::SetAttribute::signature_type> SetAttribute;
  /// @brief Method for SetAttributeWithIndex is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::SetAttributeWithIndex, ara::crypto::ipccom::x509::x509dn::proxy::methods::SetAttributeWithIndex::signature_type> SetAttributeWithIndex;
  /// @brief Method for SetDn is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::SetDn, ara::crypto::ipccom::x509::x509dn::proxy::methods::SetDn::signature_type> SetDn;
};

} // namespace vsomeip
} // namespace x509dn_binding
} // namespace x509dn
} // namespace x509
} // namespace ipccom
} // namespace crypto
} // namespace ara

#endif // CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_X509_X509DN_PROXY_VSOMEIP_X509DN_H_

