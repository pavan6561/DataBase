// -----------------------------------------------------------------------------------------------------------
// Copyright (C) AVIN SYSTEMS PVT LTD 2021 - All Rights Reserved Reproduction, distribution and utilization
// of this document as well as the communication of its contents to others without explicit authorization is
// prohibited. Offenders will be held liable for the payment of damages.
// -----------------------------------------------------------------------------------------------------------
// File Name   : proxy_vsomeip_randomgenerator.h
//
// Purpose     : Implementation of file proxy_vsomeip_randomgenerator.h
// -----------------------------------------------------------------------------------------------------------
// CODE GENERATED BY        : CM Code Generator
//
// CODE GENERATOR VERSION   : 1.4.0.A-006
//
// GENERATED ON             : 2022-02-07T12:05:52+05:30
// -----------------------------------------------------------------------------------------------------------

#ifndef CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_RANDOMGENERATOR_PROXY_VSOMEIP_RANDOMGENERATOR_H_
#define CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_RANDOMGENERATOR_PROXY_VSOMEIP_RANDOMGENERATOR_H_

#include "service_desc_randomgenerator.h"
#include "ara/crypto/ipccom/cryp/randomgenerator/randomgenerator_proxy.h"

namespace ara
{
namespace crypto
{
namespace ipccom
{
namespace cryp
{
namespace randomgenerator
{
namespace randomgenerator_binding
{
namespace vsomeip
{

/// @brief Class for RandomGeneratorImpl.
class RandomGeneratorImpl : public proxy::RandomGeneratorProxyBase, public ::ara::com::internal::vsomeip::proxy::ProxyImplBase {
 public :
  /// @brief Using for ProxyInterface.
  using ProxyInterface = proxy::RandomGeneratorProxy;
  /// @brief Using for ServiceDescriptor.
  using ServiceDescriptor = descriptors::internal::Service;

  /// @brief Definition for RandomGeneratorImpl.
  explicit RandomGeneratorImpl(ara::com::internal::vsomeip::types::InstanceId instance) :
  ::ara::com::internal::vsomeip::proxy::ProxyImplBase(ServiceDescriptor::service_id, instance, ServiceDescriptor::service_version_major, ServiceDescriptor::service_version_minor),
  /// @brief Definition for AddEntropy(instance).
    AddEntropy(instance),
  /// @brief Definition for Generate(instance).
    Generate(instance),
  /// @brief Definition for GetCryptoPrimitiveId(instance).
    GetCryptoPrimitiveId(instance),
  /// @brief Definition for GetExtensionService(instance).
    GetExtensionService(instance),
  /// @brief Definition for IsInitialized(instance).
    IsInitialized(instance),
  /// @brief Definition for SeedReadOnlyMem(instance).
    SeedReadOnlyMem(instance),
  /// @brief Definition for SeedSecretSeed(instance).
    SeedSecretSeed(instance),
  /// @brief Definition for SetKey(instance).
    SetKey(instance)
  {}
  /// @brief Definition for RandomGeneratorImpl.
  ~RandomGeneratorImpl() noexcept override {}

  /// @brief Definition for GetAddEntropy.
        ara::crypto::ipccom::cryp::randomgenerator::proxy::methods::AddEntropy& GetAddEntropy() noexcept override { return AddEntropy; }
  /// @brief Definition for GetGenerate.
        ara::crypto::ipccom::cryp::randomgenerator::proxy::methods::Generate& GetGenerate() noexcept override { return Generate; }
  /// @brief Definition for GetGetCryptoPrimitiveId.
        ara::crypto::ipccom::cryp::randomgenerator::proxy::methods::GetCryptoPrimitiveId& GetGetCryptoPrimitiveId() noexcept override { return GetCryptoPrimitiveId; }
  /// @brief Definition for GetGetExtensionService.
        ara::crypto::ipccom::cryp::randomgenerator::proxy::methods::GetExtensionService& GetGetExtensionService() noexcept override { return GetExtensionService; }
  /// @brief Definition for GetIsInitialized.
        ara::crypto::ipccom::cryp::randomgenerator::proxy::methods::IsInitialized& GetIsInitialized() noexcept override { return IsInitialized; }
  /// @brief Definition for GetSeedReadOnlyMem.
        ara::crypto::ipccom::cryp::randomgenerator::proxy::methods::SeedReadOnlyMem& GetSeedReadOnlyMem() noexcept override { return SeedReadOnlyMem; }
  /// @brief Definition for GetSeedSecretSeed.
        ara::crypto::ipccom::cryp::randomgenerator::proxy::methods::SeedSecretSeed& GetSeedSecretSeed() noexcept override { return SeedSecretSeed; }
  /// @brief Definition for GetSetKey.
        ara::crypto::ipccom::cryp::randomgenerator::proxy::methods::SetKey& GetSetKey() noexcept override { return SetKey; }

 private:
  /// @brief Method for AddEntropy is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::AddEntropy, ara::crypto::ipccom::cryp::randomgenerator::proxy::methods::AddEntropy::signature_type> AddEntropy;
  /// @brief Method for Generate is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::Generate, ara::crypto::ipccom::cryp::randomgenerator::proxy::methods::Generate::signature_type> Generate;
  /// @brief Method for GetCryptoPrimitiveId is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetCryptoPrimitiveId, ara::crypto::ipccom::cryp::randomgenerator::proxy::methods::GetCryptoPrimitiveId::signature_type> GetCryptoPrimitiveId;
  /// @brief Method for GetExtensionService is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetExtensionService, ara::crypto::ipccom::cryp::randomgenerator::proxy::methods::GetExtensionService::signature_type> GetExtensionService;
  /// @brief Method for IsInitialized is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::IsInitialized, ara::crypto::ipccom::cryp::randomgenerator::proxy::methods::IsInitialized::signature_type> IsInitialized;
  /// @brief Method for SeedReadOnlyMem is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::SeedReadOnlyMem, ara::crypto::ipccom::cryp::randomgenerator::proxy::methods::SeedReadOnlyMem::signature_type> SeedReadOnlyMem;
  /// @brief Method for SeedSecretSeed is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::SeedSecretSeed, ara::crypto::ipccom::cryp::randomgenerator::proxy::methods::SeedSecretSeed::signature_type> SeedSecretSeed;
  /// @brief Method for SetKey is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::SetKey, ara::crypto::ipccom::cryp::randomgenerator::proxy::methods::SetKey::signature_type> SetKey;
};

} // namespace vsomeip
} // namespace randomgenerator_binding
} // namespace randomgenerator
} // namespace cryp
} // namespace ipccom
} // namespace crypto
} // namespace ara

#endif // CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_RANDOMGENERATOR_PROXY_VSOMEIP_RANDOMGENERATOR_H_

