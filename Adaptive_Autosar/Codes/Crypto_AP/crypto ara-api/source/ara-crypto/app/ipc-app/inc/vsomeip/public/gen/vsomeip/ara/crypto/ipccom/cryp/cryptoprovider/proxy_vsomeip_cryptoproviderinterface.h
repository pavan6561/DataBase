// -----------------------------------------------------------------------------------------------------------
// Copyright (C) AVIN SYSTEMS PVT LTD 2021 - All Rights Reserved Reproduction, distribution and utilization
// of this document as well as the communication of its contents to others without explicit authorization is
// prohibited. Offenders will be held liable for the payment of damages.
// -----------------------------------------------------------------------------------------------------------
// File Name   : proxy_vsomeip_cryptoproviderinterface.h
//
// Purpose     : Implementation of file proxy_vsomeip_cryptoproviderinterface.h
// -----------------------------------------------------------------------------------------------------------
// CODE GENERATED BY        : CM Code Generator
//
// CODE GENERATOR VERSION   : 1.4.0.A-006
//
// GENERATED ON             : 2022-02-07T12:05:52+05:30
// -----------------------------------------------------------------------------------------------------------

#ifndef CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_CRYPTOPROVIDER_PROXY_VSOMEIP_CRYPTOPROVIDERINTERFACE_H_
#define CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_CRYPTOPROVIDER_PROXY_VSOMEIP_CRYPTOPROVIDERINTERFACE_H_

#include "service_desc_cryptoproviderinterface.h"
#include "ara/crypto/ipccom/cryp/cryptoprovider/cryptoproviderinterface_proxy.h"

namespace ara
{
namespace crypto
{
namespace ipccom
{
namespace cryp
{
namespace cryptoprovider
{
namespace cryptoproviderinterface_binding
{
namespace vsomeip
{

/// @brief Class for CryptoProviderInterfaceImpl.
class CryptoProviderInterfaceImpl : public proxy::CryptoProviderInterfaceProxyBase, public ::ara::com::internal::vsomeip::proxy::ProxyImplBase {
 public :
  /// @brief Using for ProxyInterface.
  using ProxyInterface = proxy::CryptoProviderInterfaceProxy;
  /// @brief Using for ServiceDescriptor.
  using ServiceDescriptor = descriptors::internal::Service;

  /// @brief Definition for CryptoProviderInterfaceImpl.
  explicit CryptoProviderInterfaceImpl(ara::com::internal::vsomeip::types::InstanceId instance) :
  ::ara::com::internal::vsomeip::proxy::ProxyImplBase(ServiceDescriptor::service_id, instance, ServiceDescriptor::service_version_major, ServiceDescriptor::service_version_minor),
  /// @brief Definition for CreateAuthCipher(instance).
    CreateAuthCipher(instance),
  /// @brief Definition for CreateDecryptorPrivate(instance).
    CreateDecryptorPrivate(instance),
  /// @brief Definition for CreateEncryptorPublic(instance).
    CreateEncryptorPublic(instance),
  /// @brief Definition for CreateHashDigest(instance).
    CreateHashDigest(instance),
  /// @brief Definition for CreateHashFunction(instance).
    CreateHashFunction(instance),
  /// @brief Definition for CreateKeyAgreementPrivate(instance).
    CreateKeyAgreementPrivate(instance),
  /// @brief Definition for CreateKeyDecapsulatorPrivate(instance).
    CreateKeyDecapsulatorPrivate(instance),
  /// @brief Definition for CreateKeyDerivationFunction(instance).
    CreateKeyDerivationFunction(instance),
  /// @brief Definition for CreateKeyEncapsulatorPublic(instance).
    CreateKeyEncapsulatorPublic(instance),
  /// @brief Definition for CreateMessageAuthCode(instance).
    CreateMessageAuthCode(instance),
  /// @brief Definition for CreateMsgRecoveryPublic(instance).
    CreateMsgRecoveryPublic(instance),
  /// @brief Definition for CreateRandomGenerator(instance).
    CreateRandomGenerator(instance),
  /// @brief Definition for CreateSigEncodePrivate(instance).
    CreateSigEncodePrivate(instance),
  /// @brief Definition for CreateSignature(instance).
    CreateSignature(instance),
  /// @brief Definition for CreateSignerPrivate(instance).
    CreateSignerPrivate(instance),
  /// @brief Definition for CreateStreamCipher(instance).
    CreateStreamCipher(instance),
  /// @brief Definition for CreateSymmetricBlockCipher(instance).
    CreateSymmetricBlockCipher(instance),
  /// @brief Definition for CreateSymmetricKeyWrapper(instance).
    CreateSymmetricKeyWrapper(instance),
  /// @brief Definition for CreateVerifierPublic(instance).
    CreateVerifierPublic(instance),
  /// @brief Definition for GenPrivateKey(instance).
    GenPrivateKey(instance),
  /// @brief Definition for GenSeed(instance).
    GenSeed(instance),
  /// @brief Definition for GenSymmetricKey(instance).
    GenSymmetricKey(instance),
  /// @brief Definition for LoadObject(instance).
    LoadObject(instance),
  /// @brief Definition for LoadPrivateKey(instance).
    LoadPrivateKey(instance),
  /// @brief Definition for LoadPublicKey(instance).
    LoadPublicKey(instance),
  /// @brief Definition for LoadSecretSeed(instance).
    LoadSecretSeed(instance),
  /// @brief Definition for LoadSymmetricKey(instance).
    LoadSymmetricKey(instance),
  /// @brief Definition for StopCryptoProviderService(instance).
    StopCryptoProviderService(instance)
  {}
  /// @brief Definition for CryptoProviderInterfaceImpl.
  ~CryptoProviderInterfaceImpl() noexcept override {}

  /// @brief Definition for GetCreateAuthCipher.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateAuthCipher& GetCreateAuthCipher() noexcept override { return CreateAuthCipher; }
  /// @brief Definition for GetCreateDecryptorPrivate.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateDecryptorPrivate& GetCreateDecryptorPrivate() noexcept override { return CreateDecryptorPrivate; }
  /// @brief Definition for GetCreateEncryptorPublic.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateEncryptorPublic& GetCreateEncryptorPublic() noexcept override { return CreateEncryptorPublic; }
  /// @brief Definition for GetCreateHashDigest.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateHashDigest& GetCreateHashDigest() noexcept override { return CreateHashDigest; }
  /// @brief Definition for GetCreateHashFunction.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateHashFunction& GetCreateHashFunction() noexcept override { return CreateHashFunction; }
  /// @brief Definition for GetCreateKeyAgreementPrivate.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateKeyAgreementPrivate& GetCreateKeyAgreementPrivate() noexcept override { return CreateKeyAgreementPrivate; }
  /// @brief Definition for GetCreateKeyDecapsulatorPrivate.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateKeyDecapsulatorPrivate& GetCreateKeyDecapsulatorPrivate() noexcept override { return CreateKeyDecapsulatorPrivate; }
  /// @brief Definition for GetCreateKeyDerivationFunction.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateKeyDerivationFunction& GetCreateKeyDerivationFunction() noexcept override { return CreateKeyDerivationFunction; }
  /// @brief Definition for GetCreateKeyEncapsulatorPublic.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateKeyEncapsulatorPublic& GetCreateKeyEncapsulatorPublic() noexcept override { return CreateKeyEncapsulatorPublic; }
  /// @brief Definition for GetCreateMessageAuthCode.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateMessageAuthCode& GetCreateMessageAuthCode() noexcept override { return CreateMessageAuthCode; }
  /// @brief Definition for GetCreateMsgRecoveryPublic.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateMsgRecoveryPublic& GetCreateMsgRecoveryPublic() noexcept override { return CreateMsgRecoveryPublic; }
  /// @brief Definition for GetCreateRandomGenerator.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateRandomGenerator& GetCreateRandomGenerator() noexcept override { return CreateRandomGenerator; }
  /// @brief Definition for GetCreateSigEncodePrivate.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateSigEncodePrivate& GetCreateSigEncodePrivate() noexcept override { return CreateSigEncodePrivate; }
  /// @brief Definition for GetCreateSignature.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateSignature& GetCreateSignature() noexcept override { return CreateSignature; }
  /// @brief Definition for GetCreateSignerPrivate.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateSignerPrivate& GetCreateSignerPrivate() noexcept override { return CreateSignerPrivate; }
  /// @brief Definition for GetCreateStreamCipher.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateStreamCipher& GetCreateStreamCipher() noexcept override { return CreateStreamCipher; }
  /// @brief Definition for GetCreateSymmetricBlockCipher.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateSymmetricBlockCipher& GetCreateSymmetricBlockCipher() noexcept override { return CreateSymmetricBlockCipher; }
  /// @brief Definition for GetCreateSymmetricKeyWrapper.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateSymmetricKeyWrapper& GetCreateSymmetricKeyWrapper() noexcept override { return CreateSymmetricKeyWrapper; }
  /// @brief Definition for GetCreateVerifierPublic.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateVerifierPublic& GetCreateVerifierPublic() noexcept override { return CreateVerifierPublic; }
  /// @brief Definition for GetGenPrivateKey.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::GenPrivateKey& GetGenPrivateKey() noexcept override { return GenPrivateKey; }
  /// @brief Definition for GetGenSeed.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::GenSeed& GetGenSeed() noexcept override { return GenSeed; }
  /// @brief Definition for GetGenSymmetricKey.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::GenSymmetricKey& GetGenSymmetricKey() noexcept override { return GenSymmetricKey; }
  /// @brief Definition for GetLoadObject.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::LoadObject& GetLoadObject() noexcept override { return LoadObject; }
  /// @brief Definition for GetLoadPrivateKey.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::LoadPrivateKey& GetLoadPrivateKey() noexcept override { return LoadPrivateKey; }
  /// @brief Definition for GetLoadPublicKey.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::LoadPublicKey& GetLoadPublicKey() noexcept override { return LoadPublicKey; }
  /// @brief Definition for GetLoadSecretSeed.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::LoadSecretSeed& GetLoadSecretSeed() noexcept override { return LoadSecretSeed; }
  /// @brief Definition for GetLoadSymmetricKey.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::LoadSymmetricKey& GetLoadSymmetricKey() noexcept override { return LoadSymmetricKey; }
  /// @brief Definition for GetStopCryptoProviderService.
        ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::StopCryptoProviderService& GetStopCryptoProviderService() noexcept override { return StopCryptoProviderService; }

 private:
  /// @brief Method for CreateAuthCipher is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateAuthCipher, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateAuthCipher::signature_type> CreateAuthCipher;
  /// @brief Method for CreateDecryptorPrivate is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateDecryptorPrivate, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateDecryptorPrivate::signature_type> CreateDecryptorPrivate;
  /// @brief Method for CreateEncryptorPublic is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateEncryptorPublic, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateEncryptorPublic::signature_type> CreateEncryptorPublic;
  /// @brief Method for CreateHashDigest is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateHashDigest, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateHashDigest::signature_type> CreateHashDigest;
  /// @brief Method for CreateHashFunction is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateHashFunction, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateHashFunction::signature_type> CreateHashFunction;
  /// @brief Method for CreateKeyAgreementPrivate is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateKeyAgreementPrivate, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateKeyAgreementPrivate::signature_type> CreateKeyAgreementPrivate;
  /// @brief Method for CreateKeyDecapsulatorPrivate is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateKeyDecapsulatorPrivate, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateKeyDecapsulatorPrivate::signature_type> CreateKeyDecapsulatorPrivate;
  /// @brief Method for CreateKeyDerivationFunction is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateKeyDerivationFunction, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateKeyDerivationFunction::signature_type> CreateKeyDerivationFunction;
  /// @brief Method for CreateKeyEncapsulatorPublic is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateKeyEncapsulatorPublic, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateKeyEncapsulatorPublic::signature_type> CreateKeyEncapsulatorPublic;
  /// @brief Method for CreateMessageAuthCode is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateMessageAuthCode, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateMessageAuthCode::signature_type> CreateMessageAuthCode;
  /// @brief Method for CreateMsgRecoveryPublic is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateMsgRecoveryPublic, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateMsgRecoveryPublic::signature_type> CreateMsgRecoveryPublic;
  /// @brief Method for CreateRandomGenerator is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateRandomGenerator, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateRandomGenerator::signature_type> CreateRandomGenerator;
  /// @brief Method for CreateSigEncodePrivate is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateSigEncodePrivate, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateSigEncodePrivate::signature_type> CreateSigEncodePrivate;
  /// @brief Method for CreateSignature is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateSignature, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateSignature::signature_type> CreateSignature;
  /// @brief Method for CreateSignerPrivate is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateSignerPrivate, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateSignerPrivate::signature_type> CreateSignerPrivate;
  /// @brief Method for CreateStreamCipher is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateStreamCipher, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateStreamCipher::signature_type> CreateStreamCipher;
  /// @brief Method for CreateSymmetricBlockCipher is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateSymmetricBlockCipher, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateSymmetricBlockCipher::signature_type> CreateSymmetricBlockCipher;
  /// @brief Method for CreateSymmetricKeyWrapper is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateSymmetricKeyWrapper, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateSymmetricKeyWrapper::signature_type> CreateSymmetricKeyWrapper;
  /// @brief Method for CreateVerifierPublic is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CreateVerifierPublic, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::CreateVerifierPublic::signature_type> CreateVerifierPublic;
  /// @brief Method for GenPrivateKey is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GenPrivateKey, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::GenPrivateKey::signature_type> GenPrivateKey;
  /// @brief Method for GenSeed is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GenSeed, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::GenSeed::signature_type> GenSeed;
  /// @brief Method for GenSymmetricKey is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GenSymmetricKey, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::GenSymmetricKey::signature_type> GenSymmetricKey;
  /// @brief Method for LoadObject is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::LoadObject, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::LoadObject::signature_type> LoadObject;
  /// @brief Method for LoadPrivateKey is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::LoadPrivateKey, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::LoadPrivateKey::signature_type> LoadPrivateKey;
  /// @brief Method for LoadPublicKey is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::LoadPublicKey, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::LoadPublicKey::signature_type> LoadPublicKey;
  /// @brief Method for LoadSecretSeed is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::LoadSecretSeed, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::LoadSecretSeed::signature_type> LoadSecretSeed;
  /// @brief Method for LoadSymmetricKey is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::LoadSymmetricKey, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::LoadSymmetricKey::signature_type> LoadSymmetricKey;
  /// @brief Method for StopCryptoProviderService is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::StopCryptoProviderService, ara::crypto::ipccom::cryp::cryptoprovider::proxy::methods::StopCryptoProviderService::signature_type> StopCryptoProviderService;
};

} // namespace vsomeip
} // namespace cryptoproviderinterface_binding
} // namespace cryptoprovider
} // namespace cryp
} // namespace ipccom
} // namespace crypto
} // namespace ara

#endif // CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_CRYPTOPROVIDER_PROXY_VSOMEIP_CRYPTOPROVIDERINTERFACE_H_

