// -----------------------------------------------------------------------------------------------------------
// Copyright (C) AVIN SYSTEMS PVT LTD 2021 - All Rights Reserved Reproduction, distribution and utilization
// of this document as well as the communication of its contents to others without explicit authorization is
// prohibited. Offenders will be held liable for the payment of damages.
// -----------------------------------------------------------------------------------------------------------
// File Name   : keyslotinterface_proxy.h
//
// Purpose     : Implementation of file keyslotinterface_proxy.h
// -----------------------------------------------------------------------------------------------------------
// CODE GENERATED BY        : CM Code Generator
//
// CODE GENERATOR VERSION   : 1.4.0.A-006
//
// GENERATED ON             : 2022-02-07T12:05:52+05:30
// -----------------------------------------------------------------------------------------------------------

#ifndef CRYPTOCLIENTEXE_INCLUDES_ARA_CRYPTO_IPCCOM_KEYS_KEYSLOT_KEYSLOTINTERFACE_PROXY_H_
#define CRYPTOCLIENTEXE_INCLUDES_ARA_CRYPTO_IPCCOM_KEYS_KEYSLOT_KEYSLOTINTERFACE_PROXY_H_

#include <ara/com/internal/proxy/ara_proxy_base.h>
#include "ara/crypto/ipccom/keys/keyslot/keyslotinterface_common.h"

namespace ara
{
namespace crypto
{
namespace ipccom
{
namespace keys
{
namespace keyslot
{
namespace proxy
{

namespace methods
{
  /// @brief Using for Clear.
  using Clear = ara::com::internal::proxy::Method<void()>;
  /// @brief Using for GetContentProps.
  using GetContentProps = ara::com::internal::proxy::Method<ara::crypto::ipccom::keys::keyslot::KeySlotInterface::GetContentPropsOutput()>;
  /// @brief Using for GetPrototypedProps.
  using GetPrototypedProps = ara::com::internal::proxy::Method<ara::crypto::ipccom::keys::keyslot::KeySlotInterface::GetPrototypedPropsOutput()>;
  /// @brief Using for IsEmpty.
  using IsEmpty = ara::com::internal::proxy::Method<ara::crypto::ipccom::keys::keyslot::KeySlotInterface::IsEmptyOutput()>;
  /// @brief Using for MyProvider.
  using MyProvider = ara::com::internal::proxy::Method<ara::crypto::ipccom::keys::keyslot::KeySlotInterface::MyProviderOutput()>;
  /// @brief Using for Open.
  using Open = ara::com::internal::proxy::Method<ara::crypto::ipccom::keys::keyslot::KeySlotInterface::OpenOutput(const boolean& ,const boolean& )>;
  /// @brief Using for SaveCopy.
  using SaveCopy = ara::com::internal::proxy::Method<void(const CryptoServiceInstanceId& )>;
} // namespace methods



/// @brief Class for KeySlotInterfaceProxyBase.
class KeySlotInterfaceProxyBase : public ara::com::internal::proxy::ProxyBindingBase, public ara::crypto::ipccom::keys::keyslot::KeySlotInterface {
 public:
  /// @brief Method for Clear.
  virtual methods::Clear& GetClear() = 0;
  /// @brief Method for GetContentProps.
  virtual methods::GetContentProps& GetGetContentProps() = 0;
  /// @brief Method for GetPrototypedProps.
  virtual methods::GetPrototypedProps& GetGetPrototypedProps() = 0;
  /// @brief Method for IsEmpty.
  virtual methods::IsEmpty& GetIsEmpty() = 0;
  /// @brief Method for MyProvider.
  virtual methods::MyProvider& GetMyProvider() = 0;
  /// @brief Method for Open.
  virtual methods::Open& GetOpen() = 0;
  /// @brief Method for SaveCopy.
  virtual methods::SaveCopy& GetSaveCopy() = 0;
};

/// @brief Class for KeySlotInterfaceProxy.
class KeySlotInterfaceProxy : public ara::com::internal::proxy::ProxyBase<KeySlotInterfaceProxyBase>, public ara::crypto::ipccom::keys::keyslot::KeySlotInterface {
 public:
  /// @brief Definition for KeySlotInterfaceProxy.
  explicit KeySlotInterfaceProxy(const HandleType& proxy_base_factory) :
    ara::com::internal::proxy::ProxyBase<KeySlotInterfaceProxyBase>(proxy_base_factory),
    /// @brief Function GetClear.
    Clear(proxy_base_->GetClear()),
    /// @brief Function GetGetContentProps.
    GetContentProps(proxy_base_->GetGetContentProps()),
    /// @brief Function GetGetPrototypedProps.
    GetPrototypedProps(proxy_base_->GetGetPrototypedProps()),
    /// @brief Function GetIsEmpty.
    IsEmpty(proxy_base_->GetIsEmpty()),
    /// @brief Function GetMyProvider.
    MyProvider(proxy_base_->GetMyProvider()),
    /// @brief Function GetOpen.
    Open(proxy_base_->GetOpen()),
    /// @brief Function GetSaveCopy.
    SaveCopy(proxy_base_->GetSaveCopy())
  {}

  /// @brief Proxy shall be move constructable.
  explicit KeySlotInterfaceProxy(KeySlotInterfaceProxy&&) = default;

  /// @brief Proxy shall be move assignable.
  KeySlotInterfaceProxy& operator=(KeySlotInterfaceProxy&&) = default;

  /// @brief Proxy shall not be copy constructable.
  explicit KeySlotInterfaceProxy(const KeySlotInterfaceProxy&) = delete;

  /// @brief Proxy shall not be copy assignable.
  KeySlotInterfaceProxy& operator=(const KeySlotInterfaceProxy&) = delete;

  /// @brief Method for Clear.
  methods::Clear& Clear;
  /// @brief Method for GetContentProps.
  methods::GetContentProps& GetContentProps;
  /// @brief Method for GetPrototypedProps.
  methods::GetPrototypedProps& GetPrototypedProps;
  /// @brief Method for IsEmpty.
  methods::IsEmpty& IsEmpty;
  /// @brief Method for MyProvider.
  methods::MyProvider& MyProvider;
  /// @brief Method for Open.
  methods::Open& Open;
  /// @brief Method for SaveCopy.
  methods::SaveCopy& SaveCopy;
};
} // namespace proxy

} // namespace keyslot
} // namespace keys
} // namespace ipccom
} // namespace crypto
} // namespace ara

#endif // CRYPTOCLIENTEXE_INCLUDES_ARA_CRYPTO_IPCCOM_KEYS_KEYSLOT_KEYSLOTINTERFACE_PROXY_H_

