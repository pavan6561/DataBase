// -----------------------------------------------------------------------------------------------------------
// Copyright (C) AVIN SYSTEMS PVT LTD 2021 - All Rights Reserved Reproduction, distribution and utilization
// of this document as well as the communication of its contents to others without explicit authorization is
// prohibited. Offenders will be held liable for the payment of damages.
// -----------------------------------------------------------------------------------------------------------
// File Name   : proxy_vsomeip_streamciphercontext.h
//
// Purpose     : Implementation of file proxy_vsomeip_streamciphercontext.h
// -----------------------------------------------------------------------------------------------------------
// CODE GENERATED BY        : CM Code Generator
//
// CODE GENERATOR VERSION   : 1.4.0.A-006
//
// GENERATED ON             : 2022-02-07T12:05:52+05:30
// -----------------------------------------------------------------------------------------------------------

#ifndef CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_STREAMCIPHER_PROXY_VSOMEIP_STREAMCIPHERCONTEXT_H_
#define CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_STREAMCIPHER_PROXY_VSOMEIP_STREAMCIPHERCONTEXT_H_

#include "service_desc_streamciphercontext.h"
#include "ara/crypto/ipccom/cryp/streamcipher/streamciphercontext_proxy.h"

namespace ara
{
namespace crypto
{
namespace ipccom
{
namespace cryp
{
namespace streamcipher
{
namespace streamciphercontext_binding
{
namespace vsomeip
{

/// @brief Class for StreamCipherContextImpl.
class StreamCipherContextImpl : public proxy::StreamCipherContextProxyBase, public ::ara::com::internal::vsomeip::proxy::ProxyImplBase {
 public :
  /// @brief Using for ProxyInterface.
  using ProxyInterface = proxy::StreamCipherContextProxy;
  /// @brief Using for ServiceDescriptor.
  using ServiceDescriptor = descriptors::internal::Service;

  /// @brief Definition for StreamCipherContextImpl.
  explicit StreamCipherContextImpl(ara::com::internal::vsomeip::types::InstanceId instance) :
  ::ara::com::internal::vsomeip::proxy::ProxyImplBase(ServiceDescriptor::service_id, instance, ServiceDescriptor::service_version_major, ServiceDescriptor::service_version_minor),
  /// @brief Definition for CountBytesInCache(instance).
    CountBytesInCache(instance),
  /// @brief Definition for FinishBytes(instance).
    FinishBytes(instance),
  /// @brief Definition for GetBlockService(instance).
    GetBlockService(instance),
  /// @brief Definition for GetCryptoPrimitiveId(instance).
    GetCryptoPrimitiveId(instance),
  /// @brief Definition for GetTransformation(instance).
    GetTransformation(instance),
  /// @brief Definition for IsBytewiseMode(instance).
    IsBytewiseMode(instance),
  /// @brief Definition for IsInitialized(instance).
    IsInitialized(instance),
  /// @brief Definition for IsSeekableMode(instance).
    IsSeekableMode(instance),
  /// @brief Definition for ProcessBlocks(instance).
    ProcessBlocks(instance),
  /// @brief Definition for ProcessByte(instance).
    ProcessByte(instance),
  /// @brief Definition for Reset(instance).
    Reset(instance),
  /// @brief Definition for Seek(instance).
    Seek(instance),
  /// @brief Definition for SetKey(instance).
    SetKey(instance),
  /// @brief Definition for StartReadOnlyMem(instance).
    StartReadOnlyMem(instance),
  /// @brief Definition for StartSecretSeed(instance).
    StartSecretSeed(instance)
  {}
  /// @brief Definition for StreamCipherContextImpl.
  ~StreamCipherContextImpl() noexcept override {}

  /// @brief Definition for GetCountBytesInCache.
        ara::crypto::ipccom::cryp::streamcipher::proxy::methods::CountBytesInCache& GetCountBytesInCache() noexcept override { return CountBytesInCache; }
  /// @brief Definition for GetFinishBytes.
        ara::crypto::ipccom::cryp::streamcipher::proxy::methods::FinishBytes& GetFinishBytes() noexcept override { return FinishBytes; }
  /// @brief Definition for GetGetBlockService.
        ara::crypto::ipccom::cryp::streamcipher::proxy::methods::GetBlockService& GetGetBlockService() noexcept override { return GetBlockService; }
  /// @brief Definition for GetGetCryptoPrimitiveId.
        ara::crypto::ipccom::cryp::streamcipher::proxy::methods::GetCryptoPrimitiveId& GetGetCryptoPrimitiveId() noexcept override { return GetCryptoPrimitiveId; }
  /// @brief Definition for GetGetTransformation.
        ara::crypto::ipccom::cryp::streamcipher::proxy::methods::GetTransformation& GetGetTransformation() noexcept override { return GetTransformation; }
  /// @brief Definition for GetIsBytewiseMode.
        ara::crypto::ipccom::cryp::streamcipher::proxy::methods::IsBytewiseMode& GetIsBytewiseMode() noexcept override { return IsBytewiseMode; }
  /// @brief Definition for GetIsInitialized.
        ara::crypto::ipccom::cryp::streamcipher::proxy::methods::IsInitialized& GetIsInitialized() noexcept override { return IsInitialized; }
  /// @brief Definition for GetIsSeekableMode.
        ara::crypto::ipccom::cryp::streamcipher::proxy::methods::IsSeekableMode& GetIsSeekableMode() noexcept override { return IsSeekableMode; }
  /// @brief Definition for GetProcessBlocks.
        ara::crypto::ipccom::cryp::streamcipher::proxy::methods::ProcessBlocks& GetProcessBlocks() noexcept override { return ProcessBlocks; }
  /// @brief Definition for GetProcessByte.
        ara::crypto::ipccom::cryp::streamcipher::proxy::methods::ProcessByte& GetProcessByte() noexcept override { return ProcessByte; }
  /// @brief Definition for GetReset.
        ara::crypto::ipccom::cryp::streamcipher::proxy::methods::Reset& GetReset() noexcept override { return Reset; }
  /// @brief Definition for GetSeek.
        ara::crypto::ipccom::cryp::streamcipher::proxy::methods::Seek& GetSeek() noexcept override { return Seek; }
  /// @brief Definition for GetSetKey.
        ara::crypto::ipccom::cryp::streamcipher::proxy::methods::SetKey& GetSetKey() noexcept override { return SetKey; }
  /// @brief Definition for GetStartReadOnlyMem.
        ara::crypto::ipccom::cryp::streamcipher::proxy::methods::StartReadOnlyMem& GetStartReadOnlyMem() noexcept override { return StartReadOnlyMem; }
  /// @brief Definition for GetStartSecretSeed.
        ara::crypto::ipccom::cryp::streamcipher::proxy::methods::StartSecretSeed& GetStartSecretSeed() noexcept override { return StartSecretSeed; }

 private:
  /// @brief Method for CountBytesInCache is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::CountBytesInCache, ara::crypto::ipccom::cryp::streamcipher::proxy::methods::CountBytesInCache::signature_type> CountBytesInCache;
  /// @brief Method for FinishBytes is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::FinishBytes, ara::crypto::ipccom::cryp::streamcipher::proxy::methods::FinishBytes::signature_type> FinishBytes;
  /// @brief Method for GetBlockService is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetBlockService, ara::crypto::ipccom::cryp::streamcipher::proxy::methods::GetBlockService::signature_type> GetBlockService;
  /// @brief Method for GetCryptoPrimitiveId is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetCryptoPrimitiveId, ara::crypto::ipccom::cryp::streamcipher::proxy::methods::GetCryptoPrimitiveId::signature_type> GetCryptoPrimitiveId;
  /// @brief Method for GetTransformation is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::GetTransformation, ara::crypto::ipccom::cryp::streamcipher::proxy::methods::GetTransformation::signature_type> GetTransformation;
  /// @brief Method for IsBytewiseMode is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::IsBytewiseMode, ara::crypto::ipccom::cryp::streamcipher::proxy::methods::IsBytewiseMode::signature_type> IsBytewiseMode;
  /// @brief Method for IsInitialized is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::IsInitialized, ara::crypto::ipccom::cryp::streamcipher::proxy::methods::IsInitialized::signature_type> IsInitialized;
  /// @brief Method for IsSeekableMode is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::IsSeekableMode, ara::crypto::ipccom::cryp::streamcipher::proxy::methods::IsSeekableMode::signature_type> IsSeekableMode;
  /// @brief Method for ProcessBlocks is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::ProcessBlocks, ara::crypto::ipccom::cryp::streamcipher::proxy::methods::ProcessBlocks::signature_type> ProcessBlocks;
  /// @brief Method for ProcessByte is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::ProcessByte, ara::crypto::ipccom::cryp::streamcipher::proxy::methods::ProcessByte::signature_type> ProcessByte;
  /// @brief Method for Reset is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::Reset, ara::crypto::ipccom::cryp::streamcipher::proxy::methods::Reset::signature_type> Reset;
  /// @brief Method for Seek is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::Seek, ara::crypto::ipccom::cryp::streamcipher::proxy::methods::Seek::signature_type> Seek;
  /// @brief Method for SetKey is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::SetKey, ara::crypto::ipccom::cryp::streamcipher::proxy::methods::SetKey::signature_type> SetKey;
  /// @brief Method for StartReadOnlyMem is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::StartReadOnlyMem, ara::crypto::ipccom::cryp::streamcipher::proxy::methods::StartReadOnlyMem::signature_type> StartReadOnlyMem;
  /// @brief Method for StartSecretSeed is fire & forget: false.
  ara::com::internal::vsomeip::proxy::MethodImpl<descriptors::StartSecretSeed, ara::crypto::ipccom::cryp::streamcipher::proxy::methods::StartSecretSeed::signature_type> StartSecretSeed;
};

} // namespace vsomeip
} // namespace streamciphercontext_binding
} // namespace streamcipher
} // namespace cryp
} // namespace ipccom
} // namespace crypto
} // namespace ara

#endif // CRYPTOCLIENTEXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_STREAMCIPHER_PROXY_VSOMEIP_STREAMCIPHERCONTEXT_H_

