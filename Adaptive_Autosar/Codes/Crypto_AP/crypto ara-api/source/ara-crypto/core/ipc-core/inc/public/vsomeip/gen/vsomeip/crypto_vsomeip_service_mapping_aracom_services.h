// -----------------------------------------------------------------------------------------------------------
// Copyright (C) AVIN SYSTEMS PVT LTD 2021 - All Rights Reserved Reproduction, distribution and utilization
// of this document as well as the communication of its contents to others without explicit authorization is
// prohibited. Offenders will be held liable for the payment of damages.
// -----------------------------------------------------------------------------------------------------------
// File Name   : vsomeip_service_mapping_aracom_services.h
//
// Purpose     : Implementation of file vsomeip_service_mapping_aracom_services.h
// -----------------------------------------------------------------------------------------------------------
// CODE GENERATED BY        : CM Code Generator
//
// CODE GENERATOR VERSION   : 1.4.0.A-006
//
// GENERATED ON             : 2022-02-07T12:05:52+05:30
// -----------------------------------------------------------------------------------------------------------

#ifndef CRYPTOSERVEREXE_VSOMEIP_VSOMEIP_SERVICE_MAPPING_ARACOM_SERVICES_H_
#define CRYPTOSERVEREXE_VSOMEIP_VSOMEIP_SERVICE_MAPPING_ARACOM_SERVICES_H_

#include <ara/com/internal/vsomeip/vsomeip_service_mapping.h>
#include <ara/com/internal/vsomeip/vsomeip_service_mapping_impl.h>

#include "ara/crypto/ipccom/cryp/authenticationcipher/adapter_authciphercontext.h"
#include "ara/crypto/ipccom/cryp/cryservice/blockservice/adapter_blockservice.h"
#include "ara/crypto/ipccom/x509/csr/adapter_certsignrequest.h"
#include "ara/crypto/ipccom/x509/certificate/adapter_certificate.h"
#include "ara/crypto/ipccom/cryp/cryobj/cryptoobject/adapter_cryptoobject.h"
#include "ara/crypto/ipccom/cryp/cryptoprovider/adapter_cryptoproviderinterface.h"
#include "ara/crypto/ipccom/cryp/cryservice/cryptoservice/adapter_cryptoservice.h"
#include "ara/crypto/ipccom/cryp/decryptorprivatecontext/adapter_decryptorprivatecontext.h"
#include "ara/crypto/ipccom/cryp/cryservice/digestservice/adapter_digestservice.h"
#include "ara/crypto/ipccom/cryp/encryptorpubliccontext/adapter_encryptorpubliccontext.h"
#include "ara/crypto/ipccom/cryp/cryservice/extensionservice/adapter_extensionservice.h"
#include "ara/crypto/ipccom/cryp/hashfunction/adapter_hashfunction.h"
#include "ara/crypto/ipccom/common/iointerface/adapter_iointerface.h"
#include "ara/crypto/ipccom/cryp/keyagreementprivatecontext/adapter_keyagreementprivatecontext.h"
#include "ara/crypto/ipccom/cryp/keydecapsulatorprivatecontext/adapter_keydecapsulatorprivatecontext.h"
#include "ara/crypto/ipccom/cryp/keyderivationfunction/adapter_keyderivationfunction.h"
#include "ara/crypto/ipccom/cryp/keyencapsulatorpubliccontext/adapter_keyencapsulatorpubliccontext.h"
#include "ara/crypto/ipccom/keys/keyslot/adapter_keyslotinterface.h"
#include "ara/crypto/ipccom/keys/keystorageprovider/adapter_keystorageprovider.h"
#include "ara/crypto/ipccom/cryp/messageauthenticationcode/adapter_messageauthncode.h"
#include "ara/crypto/ipccom/cryp/msgrecoverypubliccontext/adapter_msgrecoverypubliccontext.h"
#include "ara/crypto/ipccom/x509/ocspreq/adapter_ocsprequest.h"
#include "ara/crypto/ipccom/x509/ocspres/adapter_ocspresponse.h"
#include "ara/crypto/ipccom/cryp/cryobj/privatekey/adapter_privatekey.h"
#include "ara/crypto/ipccom/cryp/cryobj/pubilckey/adapter_publickey.h"
#include "ara/crypto/ipccom/cryp/randomgenerator/adapter_randomgenerator.h"
#include "ara/crypto/ipccom/cryp/cryobj/restricteduseobject/adapter_restricteduseobject.h"
#include "ara/crypto/ipccom/cryp/cryobj/secretseed/adapter_secretseed.h"
#include "ara/crypto/ipccom/cryp/signencodeprivatecontext/adapter_sigencodeprivatecontext.h"
#include "ara/crypto/ipccom/cryp/cryobj/signature/adapter_signature.h"
#include "ara/crypto/ipccom/cryp/cryservice/signatureservice/adapter_signatureservice.h"
#include "ara/crypto/ipccom/cryp/signerprivatecontext/adapter_signerprivatecontext.h"
#include "ara/crypto/ipccom/cryp/streamcipher/adapter_streamciphercontext.h"
#include "ara/crypto/ipccom/cryp/symmetricblockcipher/adapter_symmetricblockciphercontext.h"
#include "ara/crypto/ipccom/cryp/cryobj/symmetrickey/adapter_symmetrickey.h"
#include "ara/crypto/ipccom/cryp/symmetrickeywrapper/adapter_symmetrickeywrappercontext.h"
#include "ara/crypto/ipccom/cryp/verifierpubliccontext/adapter_verifierpubliccontext.h"
#include "ara/crypto/ipccom/x509/x509dn/adapter_x509dn.h"
#include "ara/crypto/ipccom/x509/ext/adapter_x509extensions.h"
#include "ara/crypto/ipccom/x509/adapter_x509provider.h"
#include "ara/crypto/ipccom/x509/pki/adapter_x509publickeyinfo.h"

namespace ara
{
namespace com
{
namespace internal
{
namespace vsomeip
{
namespace runtime
{

/// @brief Class for AraComVSomeIPServiceMapping.
class AraComVSomeIPServiceMapping : public VSomeIPServiceMapping
{
  public:
  /// @brief Definition for GetMappingForServiceId.
  static const Mapping* GetMappingForServiceId(ServiceId service_id) noexcept(false);
  /// @brief Definition for GetMappingForVSomeIPServiceId.
  static MultiMapping GetMappingForVSomeIPServiceId(::vsomeip::service_t service_id) noexcept(false);
};

} // namespace runtime
} // namespace vsomeip
} // namespace internal
} // namespace com
} // namespace ara

 #endif // VSOMEIP_SERVICE_MAPPING_ARACOM_SERVICES_H_


