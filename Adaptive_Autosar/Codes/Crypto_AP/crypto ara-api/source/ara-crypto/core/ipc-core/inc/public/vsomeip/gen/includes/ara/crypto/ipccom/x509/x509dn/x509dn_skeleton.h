// -----------------------------------------------------------------------------------------------------------
// Copyright (C) AVIN SYSTEMS PVT LTD 2021 - All Rights Reserved Reproduction, distribution and utilization
// of this document as well as the communication of its contents to others without explicit authorization is
// prohibited. Offenders will be held liable for the payment of damages.
// -----------------------------------------------------------------------------------------------------------
// File Name   : x509dn_skeleton.h
//
// Purpose     : Implementation of file x509dn_skeleton.h
// -----------------------------------------------------------------------------------------------------------
// CODE GENERATED BY        : CM Code Generator
//
// CODE GENERATOR VERSION   : 1.4.0.A-006
//
// GENERATED ON             : 2022-02-07T12:05:52+05:30
// -----------------------------------------------------------------------------------------------------------

#ifndef CRYPTOSERVEREXE_INCLUDES_ARA_CRYPTO_IPCCOM_X509_X509DN_X509DN_SKELETON_H_
#define CRYPTOSERVEREXE_INCLUDES_ARA_CRYPTO_IPCCOM_X509_X509DN_X509DN_SKELETON_H_

#include <ara/com/internal/skeleton/ara_skeleton_base.h>
#include <ara/com/illegal_state_exception.h>
#include "ara/crypto/ipccom/x509/x509dn/x509dn_common.h"

namespace ara
{
namespace crypto
{
namespace ipccom
{
namespace x509
{
namespace x509dn
{
namespace skeleton
{



/// @brief Class for X509DNSkeleton.
class X509DNSkeleton : public ara::crypto::ipccom::x509::x509dn::X509DN, public ara::com::internal::skeleton::TypedServiceImplBase<X509DNSkeleton> {
 public:
  /// @uptrace{SWS_CM_00130}
  X509DNSkeleton(ara::com::InstanceIdentifier instance_id, ara::com::MethodCallProcessingMode mode = ara::com::MethodCallProcessingMode::kEvent) : ara::com::internal::skeleton::TypedServiceImplBase<X509DNSkeleton>(instance_id, mode) {}
  /// @brief X509DNSkeleton Destructor.

  /// @uptrace{SWS_CM_00152, 4ff7c3aec9fce6d3819bb320c152ce9c410cbe74}
  X509DNSkeleton(ara::core::InstanceSpecifier instanceSpec, ara::com::MethodCallProcessingMode mode = ara::com::MethodCallProcessingMode::kEvent) : ara::com::internal::skeleton::TypedServiceImplBase<X509DNSkeleton>(std::move(instanceSpec), mode) {}

  /// @uptrace{SWS_CM_00153, 791854b84a101bd8d4a5e0e90bb3fb34c1fafd6f}
  X509DNSkeleton(ara::com::InstanceIdentifierContainer instanceIDs, ara::com::MethodCallProcessingMode mode = ara::com::MethodCallProcessingMode::kEvent) : ara::com::internal::skeleton::TypedServiceImplBase<X509DNSkeleton>(std::move(instanceIDs), mode) {}

  /// @brief Skeleton shall be move constructable.
  explicit X509DNSkeleton(X509DNSkeleton&&) = default;

  /// @brief Skeleton shall be move assignable.
  X509DNSkeleton& operator=(X509DNSkeleton&&) = default;

  /// @brief Skeleton shall not be copy constructable.
  explicit X509DNSkeleton(const X509DNSkeleton&) = delete;

  /// @brief Virtual function.
virtual ~X509DNSkeleton() noexcept override;

  /// @brief Skeleton shall not be copy assignable.
  X509DNSkeleton& operator=(const X509DNSkeleton&) = delete;

  /// @brief Definition for OfferService.
  void OfferService();
  using ara::crypto::ipccom::x509::x509dn::X509DN::ExportPubliclyOutput;
  /// @brief Definition for ExportPublicly.
  virtual ara::core::Future<ExportPubliclyOutput>ExportPublicly(const uint32& formatId)=0 ;
  using ara::crypto::ipccom::x509::x509dn::X509DN::GetAttributeOutput;
  /// @brief Definition for GetAttribute.
  virtual ara::core::Future<GetAttributeOutput>GetAttribute(const uint64& id)=0 ;
  using ara::crypto::ipccom::x509::x509dn::X509DN::GetAttributeWithIndexOutput;
  /// @brief Definition for GetAttributeWithIndex.
  virtual ara::core::Future<GetAttributeWithIndexOutput>GetAttributeWithIndex(const uint32& id,const uint64& index)=0 ;
  using ara::crypto::ipccom::x509::x509dn::X509DN::GetDnStringOutput;
  /// @brief Definition for GetDnString.
  virtual ara::core::Future<GetDnStringOutput>GetDnString()=0 ;
  using ara::crypto::ipccom::x509::x509dn::X509DN::MyProviderOutput;
  /// @brief Definition for MyProvider.
  virtual ara::core::Future<MyProviderOutput>MyProvider()=0 ;
  /// @brief Definition for SetAttribute.
  virtual ara::core::Future<void> SetAttribute(const uint32& attributeId,const String& attribute) = 0;
  /// @brief Definition for SetAttributeWithIndex.
  virtual ara::core::Future<void> SetAttributeWithIndex(const uint32& attributeId,const uint64& index,const String& attribute) = 0;
  /// @brief Definition for SetDn.
  virtual ara::core::Future<void> SetDn(const String& dn) = 0;
};

} // namespace skeleton
} // namespace x509dn
} // namespace x509
} // namespace ipccom
} // namespace crypto
} // namespace ara

#endif // CRYPTOSERVEREXE_INCLUDES_ARA_CRYPTO_IPCCOM_X509_X509DN_X509DN_SKELETON_H_

