// -----------------------------------------------------------------------------------------------------------
// Copyright (C) AVIN SYSTEMS PVT LTD 2021 - All Rights Reserved Reproduction, distribution and utilization
// of this document as well as the communication of its contents to others without explicit authorization is
// prohibited. Offenders will be held liable for the payment of damages.
// -----------------------------------------------------------------------------------------------------------
// File Name   : adapter_privatekey.h
//
// Purpose     : Implementation of file adapter_privatekey.h
// -----------------------------------------------------------------------------------------------------------
// CODE GENERATED BY        : CM Code Generator
//
// CODE GENERATOR VERSION   : 1.4.0.A-006
//
// GENERATED ON             : 2022-02-07T12:05:52+05:30
// -----------------------------------------------------------------------------------------------------------

#ifndef CRYPTOSERVEREXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_CRYOBJ_PRIVATEKEY_ADAPTER_PRIVATEKEY_H_
#define CRYPTOSERVEREXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_CRYOBJ_PRIVATEKEY_ADAPTER_PRIVATEKEY_H_

#include <ara/com/internal/vsomeip/skeleton/vsomeip_skeleton_base.h>
#include "service_desc_privatekey.h"

#include "ara/crypto/ipccom/cryp/cryobj/privatekey/privatekey_skeleton.h"

namespace ara
{
namespace crypto
{
namespace ipccom
{
namespace cryp
{
namespace cryobj
{
namespace privatekey
{
namespace privatekey_binding
{
namespace vsomeip
{

/// @brief Class for PrivateKeyServiceAdapter.
class PrivateKeyServiceAdapter : public
  ::ara::com::internal::vsomeip::skeleton::ServiceImplBase {
 public:
  /// @brief Using for ServiceInterface.
  using ServiceInterface = skeleton::PrivateKeySkeleton;
  /// @brief Using for ServiceDescriptor.
  using ServiceDescriptor = descriptors::internal::Service;

  /// @brief description on PrivateKeyServiceAdapter.
  PrivateKeyServiceAdapter(ServiceInterface& service, ara::com::internal::vsomeip::types::InstanceId instance) :
    ::ara::com::internal::vsomeip::skeleton::ServiceImplBase(service, instance){
    Connect(service);
    RegisterMethodDispatcher(ServiceDescriptor::service_id,
      [this](const std::shared_ptr<::vsomeip::message>& msg) { DispatchMethodCall(msg); });
    OfferService(ServiceDescriptor::service_id, GetInstanceId(), ServiceDescriptor::service_version_major, ServiceDescriptor::service_version_minor);
    SendInitialNotification(service);
  }

  /// @brief PrivateKeyServiceAdapter Destructor.
  virtual ~PrivateKeyServiceAdapter() noexcept override;

  /// @brief Definition for Connect.
  void Connect(ServiceInterface& service);
  /// @brief Definition for Disconnect.
  void Disconnect(ServiceInterface& service);
  
  /// @brief Definition for SendInitialNotification.
  void SendInitialNotification(ServiceInterface& service);

 protected:
  /// @brief Definition for DispatchMethodCall.
  void DispatchMethodCall(const std::shared_ptr<::vsomeip::message>& msg);

 private:
};

} // namespace vsomeip
} // namespace privatekey_binding
} // namespace privatekey
} // namespace cryobj
} // namespace cryp
} // namespace ipccom
} // namespace crypto
} // namespace ara

#endif // CRYPTOSERVEREXE_VSOMEIP_ARA_CRYPTO_IPCCOM_CRYP_CRYOBJ_PRIVATEKEY_ADAPTER_PRIVATEKEY_H_


